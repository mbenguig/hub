{
    "metadata": {
        "date": "2023-03-09T11:34:33.162"
    },
    "packages": {
        "ApplicationConnectors": {
            "metadata": {
                "slug": "applicationconnectors",
                "name": "ApplicationConnectors",
                "short_description": "Application Connectors",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/ApplicationConnectors",
                "tags": [
                    "ERP",
                    "ServiceNow",
                    "SAP",
                    "LDAP",
                    "PeopleSoft",
                    "JD Edwards",
                    "Centreon",
                    "SSIS",
                    "Notification",
                    "IBM",
                    "Microsoft",
                    "InfoSphere",
                    "ETL",
                    "Oracle"
                ]
            },
            "catalog": {
                "bucket": "it-application-connectors",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "SAP_ECC_Execute_JCo_Function",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "SAP",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/SAP_ECC.xml"
                    },
                    {
                        "name": "Oracle_JD_Edwards_Scheduler",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "JD Edwards",
                                "ETL",
                                "Oracle"
                            ]
                        },
                        "file": "resources/catalog/JD_Edwards_Scheduler.xml"
                    },
                    {
                        "name": "Oracle_JD_Edwards_Orchestrator",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "JD Edwards",
                                "ETL",
                                "Oracle"
                            ]
                        },
                        "file": "resources/catalog/JD_Edwards_Orchestrator.xml"
                    },
                    {
                        "name": "Oracle_JD_Edwards_Server_Manager",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "JD Edwards",
                                "ETL",
                                "Oracle"
                            ]
                        },
                        "file": "resources/catalog/JD_Edwards_Server_Manager.xml"
                    },
                    {
                        "name": "Microsoft_Run_SSIS_Package",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "Microsoft",
                                "ETL",
                                "SSIS"
                            ]
                        },
                        "file": "resources/catalog/Run_SSIS_Package.xml"
                    },
                    {
                        "name": "IBM_InfoSphere_DataStage",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "IBM",
                                "InfoSphere",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/IBM_InfoSphere_DataStage.xml"
                    },
                    {
                        "name": "Microsoft_Ldap_Query",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "LDAP",
                                "Microsoft",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/Ldap_Query.xml"
                    },
                    {
                        "name": "Centreon_Notification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "Centreon",
                                "ETL",
                                "Notification"
                            ]
                        },
                        "file": "resources/catalog/Centreon_Notification.xml"
                    },
                    {
                        "name": "ServiceNow_Create_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Create_Task.xml"
                    },
                    {
                        "name": "ServiceNow_Mark_Task_As_Resolved",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Mark_Task_As_Resolved.xml"
                    },
                    {
                        "name": "ServiceNow_Send_Email",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Send_Email.xml"
                    },
                    {
                        "name": "Oracle_PeopleSoft",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "PeopleSoft",
                                "ETL",
                                "Oracle"
                            ]
                        },
                        "file": "resources/catalog/PeopleSoft.xml"
                    },
                    {
                        "name": "ServiceNow_Create_Record",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Create_Record.xml"
                    },
                    {
                        "name": "ServiceNow_Delete_Record",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Delete_Record.xml"
                    },
                    {
                        "name": "ServiceNow_Retrieve_A_Record",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Retrieve_A_Record.xml"
                    },
                    {
                        "name": "ServiceNow_Retrieve_Records",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Retrieve_Records.xml"
                    },
                    {
                        "name": "ServiceNow_Update_Or_Modify_A_Record",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "ERP",
                                "ServiceNow",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/ServiceNow_Update_Or_Modify_A_Record.xml"
                    }
                ]
            }
        },
        "AutoML": {
            "metadata": {
                "slug": "ai-auto-ml-optimization",
                "name": "AutoML",
                "short_description": "Hyperparameter optimization for learning algorithms",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/AutoML",
                "tags": [
                    "DistributedAutoML",
                    "Horovod",
                    "HyperParameterOptimization",
                    "TunningAlgorithms",
                    "Training",
                    "Kursawe",
                    "Generation",
                    "Slurm",
                    "Classification",
                    "AutoML",
                    "Himmelblau",
                    "Detection"
                ]
            },
            "catalog": {
                "bucket": "ai-auto-ml-optimization",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "get_automl_variables",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "AutoML Scripts"
                        },
                        "file": "resources/catalog/get_automl_variables.groovy"
                    },
                    {
                        "name": "get_automl_params",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "AutoML Scripts"
                        },
                        "file": "resources/catalog/get_automl_params.groovy"
                    },
                    {
                        "name": "get_automl_token",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "AutoML Scripts"
                        },
                        "file": "resources/catalog/get_automl_token.groovy"
                    },
                    {
                        "name": "Distributed_Auto_ML",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/Distributed_Auto_ML.xml"
                    },
                    {
                        "name": "Himmelblau_Function",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms",
                                "Himmelblau"
                            ]
                        },
                        "file": "resources/catalog/Himmelblau_Function.xml"
                    },
                    {
                        "name": "Kursawe_Multiobjective_Function",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "Kursawe",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/Kursawe_Multiobjective_Function.xml"
                    },
                    {
                        "name": "Digits_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "Classification",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/Digits_Classification.xml"
                    },
                    {
                        "name": "Image_Object_Detection",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms",
                                "Detection"
                            ]
                        },
                        "file": "resources/catalog/Image_Object_Detection.xml"
                    },
                    {
                        "name": "Text_Generation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "Generation",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/Text_Generation.xml"
                    },
                    {
                        "name": "CIFAR_10_Image_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "Classification",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/CIFAR_10_Image_Classification.xml"
                    },
                    {
                        "name": "CIFAR_100_Image_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "Classification",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/CIFAR_100_Image_Classification.xml"
                    },
                    {
                        "name": "Single_Objective_Handwritten_Digit_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "Classification",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/Single_Objective_Handwritten_Digit_Classification.xml"
                    },
                    {
                        "name": "Multiple_Objective_Handwritten_Digit_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "Classification",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/Multiple_Objective_Handwritten_Digit_Classification.xml"
                    },
                    {
                        "name": "Handwritten_Digit_Classification_Search_Space",
                        "metadata": {
                            "kind": "Text",
                            "commitMessage": "First commit",
                            "contentType": "application/json",
                            "projectName": "Search Space"
                        },
                        "file": "resources/catalog/Handwritten_Digit_Classification_Search_Space.json"
                    },
                    {
                        "name": "TensorFlow_Keras_Multi_Node_Multi_GPU_On_Slurm",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "DistributedAutoML",
                                "Slurm",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/TensorFlow_Keras_Multi_Node_Multi_GPU_On_Slurm.xml"
                    },
                    {
                        "name": "TensorFlow_Keras_Multi_GPU_Horovod",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "DistributedAutoML",
                                "Horovod",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/TensorFlow_Keras_Multi_GPU_Horovod.xml"
                    },
                    {
                        "name": "Python_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/Python_Task.xml"
                    },
                    {
                        "name": "R_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "DistributedAutoML",
                                "HyperParameterOptimization",
                                "AutoML",
                                "TunningAlgorithms"
                            ]
                        },
                        "file": "resources/catalog/R_Task.xml"
                    }
                ]
            }
        },
        "AWS": {
            "metadata": {
                "slug": "aws-ec2",
                "name": "AWS EC2",
                "short_description": "Lifecycle management workflows for AWS EC2",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/AWS",
                "tags": [
                    "Service Automation",
                    "AWS",
                    "Cloud"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "AWS_EC2_Instance",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud",
                                "Service Automation",
                                "AWS"
                            ]
                        },
                        "file": "resources/catalog/AWS_EC2_Instance.xml"
                    },
                    {
                        "name": "AWS_EC2_Instance_Delete",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud",
                                "Service Automation",
                                "AWS"
                            ]
                        },
                        "file": "resources/catalog/AWS_EC2_Instance_delete.xml"
                    }
                ]
            }
        },
        "AzureCognitiveServices": {
            "metadata": {
                "slug": "ai-azure-cognitive-services",
                "name": "Azure Cognitive Services",
                "short_description": "Azure Cognitive Services",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/AzureCognitiveServices",
                "tags": [
                    "Azure",
                    "Cognitive Services",
                    "Machine Learning",
                    "Knowledge",
                    "Deep Learning",
                    "Spell",
                    "Language",
                    "Vision",
                    "Search",
                    "News",
                    "Speech",
                    "Cognitive",
                    "Emotion",
                    "Face",
                    "Azure Cognitive Services",
                    "Bing"
                ]
            },
            "catalog": {
                "bucket": "ai-azure-cognitive-services",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Academic_Knowledge",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Knowledge",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Academic_Knowledge.xml"
                    },
                    {
                        "name": "Bing_Autosuggest",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Autosuggest.xml"
                    },
                    {
                        "name": "Bing_Custom_Search",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Search",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Custom_Search.xml"
                    },
                    {
                        "name": "Bing_Entity_Search",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Search",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Entity_Search.xml"
                    },
                    {
                        "name": "Bing_Image_Search",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Search",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Image_Search.xml"
                    },
                    {
                        "name": "Bing_News",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "News",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_News.xml"
                    },
                    {
                        "name": "Bing_Speech_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Speech",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Speech_Service.xml"
                    },
                    {
                        "name": "Bing_Spell_Check",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Spell",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Spell_Check.xml"
                    },
                    {
                        "name": "Bing_Video_Search",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Search",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Video_Search.xml"
                    },
                    {
                        "name": "Bing_Web_Search",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Search",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning",
                                "Bing"
                            ]
                        },
                        "file": "resources/catalog/Bing_Web_Search.xml"
                    },
                    {
                        "name": "Computer_Vision",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Vision",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Computer_Vision.xml"
                    },
                    {
                        "name": "Content_Moderator",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Vision",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Content_Moderator.xml"
                    },
                    {
                        "name": "Custom_Decision_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Knowledge",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Custom_Decision_Service.xml"
                    },
                    {
                        "name": "Custom_Speech_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Speech",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Custom_Speech_Service.xml"
                    },
                    {
                        "name": "Custom_Vision_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Vision",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Custom_Vision_Service.xml"
                    },
                    {
                        "name": "Emotion_API",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Emotion",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Emotion_API.xml"
                    },
                    {
                        "name": "Entity_Linking",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Knowledge",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Entity_Linking.xml"
                    },
                    {
                        "name": "Face_API",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Face",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Face_API.xml"
                    },
                    {
                        "name": "Knowledge_Exploration_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Knowledge",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Knowledge_Exploration_Service.xml"
                    },
                    {
                        "name": "Language_Understanding",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Language",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Language_Understanding.xml"
                    },
                    {
                        "name": "Linguistic_Analysis",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Language",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Linguistic_Analysis.xml"
                    },
                    {
                        "name": "QnA_Maker",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Knowledge",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/QnA_Maker.xml"
                    },
                    {
                        "name": "Recommendations",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Knowledge",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Recommendations.xml"
                    },
                    {
                        "name": "Speaker_Recognition",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Speech",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Speaker_Recognition.xml"
                    },
                    {
                        "name": "Text_Analytics",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Language",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Text_Analytics.xml"
                    },
                    {
                        "name": "Translator_Speech",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Speech",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Translator_Speech.xml"
                    },
                    {
                        "name": "Translator_Text",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Language",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Translator_Text.xml"
                    },
                    {
                        "name": "Video_Indexer",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Vision",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Video_Indexer.xml"
                    },
                    {
                        "name": "Web_Language_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Language",
                                "Cognitive Services",
                                "Cognitive",
                                "Machine Learning",
                                "Azure Cognitive Services",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Web_Language_Model.xml"
                    }
                ]
            }
        },
        "BigData": {
            "metadata": {
                "slug": "big-data",
                "name": "Big Data",
                "short_description": "Basic Big Data tasks",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/BigData",
                "tags": [
                    "S3",
                    "Streaming",
                    "Azure",
                    "Artificial Intelligence",
                    "Big Data",
                    "Kafka",
                    "HDFS",
                    "Data Streaming",
                    "HDInsight",
                    "Service Automation",
                    "YARN",
                    "Analytics",
                    "HBase",
                    "Swarm",
                    "REST API",
                    "Hive",
                    "Docker",
                    "Zookeeper",
                    "Event Hub",
                    "Spark",
                    "ETL"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/Azure_HDInsight_Spark_ARM_Template.json",
                    "resources/dataspace/Azure_HDInsight_Spark_Cluster_Parameters.json"
                ]
            },
            "catalog": {
                "bucket": "data-big-data",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Zookeeper_Start_Or_Bind_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Zookeeper",
                                "Big Data",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Zookeeper_Start_Or_Bind_Service.xml"
                    },
                    {
                        "name": "Zookeeper_Terminate_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Zookeeper",
                                "Big Data",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Zookeeper_Terminate_Service.xml"
                    },
                    {
                        "name": "Kafka_Start_Or_Bind_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Kafka",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Kafka_Start_Or_Bind_Service.xml"
                    },
                    {
                        "name": "Kafka_Create_Topic",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Kafka",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Kafka_Create_Topic.xml"
                    },
                    {
                        "name": "Kafka_Write_Message_To_Topic",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Kafka",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Kafka_Write_Message_To_Topic.xml"
                    },
                    {
                        "name": "Kafka_Read_From_Topic",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Kafka",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Kafka_Read_From_Topic.xml"
                    },
                    {
                        "name": "Kafka_Terminate_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Kafka",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Kafka_Terminate_Service.xml"
                    },
                    {
                        "name": "Azure_Authenticate",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming"
                            ]
                        },
                        "file": "resources/catalog/Azure_Authenticate.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Create_Resource_Group",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Create_Resource_Group.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Delete_Resource_Group",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Delete_Resource_Group.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_Deploy",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_Deploy.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_Check_Deployment",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_Check_Deployment.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_Get_Cluster_Info",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_Get_Cluster_Info.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_Delete_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_Delete_Cluster.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_Delete_Deployment",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_Delete_Deployment.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_Submit_Application",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_Submit_Application.xml"
                    },
                    {
                        "name": "Parse_Update_Json_From_Catalog",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Parse_Update_Json_From_Catalog.xml"
                    },
                    {
                        "name": "Parse_Update_Json_From_Global_Space",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Parse_Update_Json_From_Global_Space.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_ARM_Template",
                        "metadata": {
                            "kind": "script/pre",
                            "commitMessage": "First commit",
                            "contentType": "application/json",
                            "projectName": "07. Azure HDInsight Spark ARM"
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_ARM_Template.json"
                    },
                    {
                        "name": "Azure_HDInsight_Create_Spark_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Create_Spark_Cluster.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Scale_Spark_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Scale_Spark_Cluster.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Delete_Spark_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Delete_Spark_Cluster.xml"
                    },
                    {
                        "name": "Azure_HDInsight_Spark_Send_Signal_${SIGNAL_TO_SEND}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "Spark",
                                "HDInsight"
                            ]
                        },
                        "file": "resources/catalog/Azure_HDInsight_Spark_Send_Signal_${SIGNAL_TO_SEND}.xml"
                    },
                    {
                        "name": "Multi_Source_ETL",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "S3",
                                "Azure",
                                "Big Data",
                                "Data Streaming",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/multi_source_etl.xml"
                    },
                    {
                        "name": "Iterative_ETL",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "S3",
                                "Big Data",
                                "HDFS",
                                "Data Streaming",
                                "Spark",
                                "ETL"
                            ]
                        },
                        "file": "resources/catalog/iterative_etl.xml"
                    },
                    {
                        "name": "Docker_Swarm_HDFS_Zookeeper_Hbase_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Swarm",
                                "Docker",
                                "Zookeeper",
                                "Big Data",
                                "HDFS",
                                "Service Automation",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Docker_Swarm_HDFS_Zookeeper_Hbase_Service.xml"
                    },
                    {
                        "name": "Docker_Swarm_HDFS_YARN_Hive_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Swarm",
                                "Hive",
                                "Docker",
                                "Big Data",
                                "HDFS",
                                "Service Automation",
                                "YARN",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Docker_Swarm_HDFS_YARN_Hive_Service.xml"
                    },
                    {
                        "name": "Docker_Swarm_Spark_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Swarm",
                                "Docker",
                                "Artificial Intelligence",
                                "Big Data",
                                "Spark",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Docker_Swarm_Spark_Service.xml"
                    },
                    {
                        "name": "Docker_Swarm_HDFS_Spark_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Swarm",
                                "Docker",
                                "Artificial Intelligence",
                                "Big Data",
                                "HDFS",
                                "Spark",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Docker_Swarm_HDFS_Spark_Service.xml"
                    },
                    {
                        "name": "Docker_Swarm_HDFS_Zookeeper_Hbase_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Swarm",
                                "Docker",
                                "Zookeeper",
                                "Big Data",
                                "HDFS",
                                "Service Automation",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Docker_Swarm_HDFS_Zookeeper_Hbase_Service.xml"
                    },
                    {
                        "name": "Azure_Create_Event_Hub",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Streaming",
                                "REST API",
                                "Azure",
                                "Event Hub",
                                "Big Data"
                            ]
                        },
                        "file": "resources/catalog/Azure_Create_Event_Hub.xml"
                    },
                    {
                        "name": "Azure_Delete_Event_Hub",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Streaming",
                                "REST API",
                                "Azure",
                                "Event Hub",
                                "Big Data"
                            ]
                        },
                        "file": "resources/catalog/Azure_Delete_Event_Hub.xml"
                    },
                    {
                        "name": "Azure_Send_Message_To_Event_Hub",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Streaming",
                                "REST API",
                                "Azure",
                                "Event Hub",
                                "Big Data"
                            ]
                        },
                        "file": "resources/catalog/Azure_Send_Message_To_Event_Hub.xml"
                    }
                ]
            }
        },
        "Calendars": {
            "metadata": {
                "slug": "calendars",
                "name": "Calendars Definitions",
                "short_description": "Calendars Definitions",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Calendars",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "calendars",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "every_10_minutes",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/Every10Minutes.json"
                    },
                    {
                        "name": "every_hour",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/EveryHour.json"
                    },
                    {
                        "name": "every_1st_day_of_each_month",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/Every1stDayOfEachMonth.json"
                    },
                    {
                        "name": "every_last_day_of_each_month",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/EveryLastDayOfEachMonth.json"
                    },
                    {
                        "name": "every_monday",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/EveryMonday.json"
                    },
                    {
                        "name": "every_monday_wednesday_friday",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/EveryMondayWednesdayFriday.json"
                    },
                    {
                        "name": "every_saturday_and_sunday_plus_world_cup",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/EverySaturdayAndSundayPlusWorldCup.json"
                    },
                    {
                        "name": "every_week_day",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/EveryWeekDay.json"
                    },
                    {
                        "name": "new_year_eve",
                        "metadata": {
                            "kind": "Calendar",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/NewYearEve.json"
                    }
                ]
            }
        },
        "Cassandra": {
            "metadata": {
                "slug": "apache-cassandra",
                "name": "Apache Cassandra",
                "short_description": "Lifecycle management workflow of Apache Cassandra service for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Cassandra",
                "tags": [
                    "NoSQL",
                    "Docker",
                    "Service Automation",
                    "Data Base",
                    "Cassandra"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Cassandra",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Docker",
                                "Cassandra",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Cassandra.xml"
                    },
                    {
                        "name": "Finish_Cassandra",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Docker",
                                "Cassandra",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Finish_Cassandra.xml"
                    },
                    {
                        "name": "Resume_Cassandra",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Docker",
                                "Cassandra",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Resume_Cassandra.xml"
                    },
                    {
                        "name": "Pause_Cassandra",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Docker",
                                "Cassandra",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Pause_Cassandra.xml"
                    }
                ]
            }
        },
        "CloudAutomationDockerTemplate": {
            "metadata": {
                "slug": "PSA_Template",
                "name": "PSA Template",
                "short_description": "Template for building new docker-based PSA services including pre-built Lifecycle management actions",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/CloudAutomationDockerTemplate",
                "tags": [
                    "Docker",
                    "Service Automation",
                    "Template"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Deploy_Docker_Template",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Docker",
                                "Service Automation",
                                "Template"
                            ]
                        },
                        "file": "resources/catalog/Deploy_Docker_Template.xml"
                    },
                    {
                        "name": "Finish_Docker_Template",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Docker",
                                "Service Automation",
                                "Template"
                            ]
                        },
                        "file": "resources/catalog/Finish_Docker_Template.xml"
                    },
                    {
                        "name": "Resume_Docker_Template",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Docker",
                                "Service Automation",
                                "Template"
                            ]
                        },
                        "file": "resources/catalog/Resume_Docker_Template.xml"
                    },
                    {
                        "name": "Pause_Docker_Template",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Docker",
                                "Service Automation",
                                "Template"
                            ]
                        },
                        "file": "resources/catalog/Pause_Docker_Template.xml"
                    }
                ]
            }
        },
        "CloudAutomationTemplate": {
            "metadata": {
                "slug": "cloudautomation-template",
                "name": "CloudAutomation Template",
                "short_description": "Lifecycle management workflow templates for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/CloudAutomationTemplate",
                "tags": [
                    "Service Automation",
                    "Template"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Deploy_Template",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Service Automation",
                                "Template"
                            ]
                        },
                        "file": "resources/catalog/Deploy_Template.xml"
                    },
                    {
                        "name": "Finish_Template",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Service Automation",
                                "Template"
                            ]
                        },
                        "file": "resources/catalog/Finish_Template.xml"
                    }
                ]
            }
        },
        "COCOAnnotator": {
            "metadata": {
                "slug": "coco-annotator",
                "name": "COCO Annotator",
                "short_description": "Lifecycle management workflow of COCO Annotator for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/COCOAnnotator",
                "tags": [
                    "Service Automation",
                    "Data Annotation",
                    "Artificial Intelligence",
                    "COCO Annotator"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "COCO_Annotator",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "COCO Annotator",
                                "Service Automation",
                                "Data Annotation"
                            ]
                        },
                        "file": "resources/catalog/COCO_Annotator.xml"
                    },
                    {
                        "name": "Finish_COCO_Annotator",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "COCO Annotator",
                                "Service Automation",
                                "Data Annotation"
                            ]
                        },
                        "file": "resources/catalog/Finish_COCO_Annotator.xml"
                    }
                ]
            }
        },
        "Controls": {
            "metadata": {
                "slug": "controls",
                "name": "Controls",
                "short_description": "Basic proactive tasks for all supported languages.",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Controls",
                "tags": [
                    "Controls",
                    "Get started",
                    "Building blocks"
                ]
            },
            "catalog": {
                "bucket": "control-templates",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "If",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/branch.xml"
                    },
                    {
                        "name": "Loop",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/loop.xml"
                    },
                    {
                        "name": "Replicate",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/replicate.xml"
                    },
                    {
                        "name": "Submit_Job_No_Wait",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/submit_job_no_wait.xml"
                    },
                    {
                        "name": "Submit_Job_And_Wait",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/submit_job_and_wait.xml"
                    },
                    {
                        "name": "Wait_For_Any",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/wait_for_any.xml"
                    },
                    {
                        "name": "Wait_For_Any_Replicate",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/wait_for_any_replicate.xml"
                    },
                    {
                        "name": "Submit_And_Wait_For_Any",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/submit_and_wait_for_any.xml"
                    },
                    {
                        "name": "Cron",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/Cron.xml"
                    },
                    {
                        "name": "Trigger_PSA_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/trigger_PSA_service.xml"
                    },
                    {
                        "name": "Execute_Action_PSA_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/execute_action_PSA_service.xml"
                    },
                    {
                        "name": "Wait_For_Signals_Reactive",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/Wait_For_Signals_Reactive.xml"
                    },
                    {
                        "name": "Wait_For_Signals",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/Wait_For_Signals.xml"
                    },
                    {
                        "name": "Check_For_Signals",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/Check_For_Signals.xml"
                    },
                    {
                        "name": "Wait_For_Signals_With_Variables",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/wait_for_signals_with_variables.xml"
                    },
                    {
                        "name": "Send_Signal_To_Job",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/Send_Signal_To_Job.xml"
                    }
                ]
            }
        },
        "Cron": {
            "metadata": {
                "slug": "cron",
                "name": "Jobs Planning & CRON",
                "short_description": "Plan jobs on a regular basis with advanced controls",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Cron",
                "tags": [
                    "Job planning",
                    "Building blocks",
                    "Cron"
                ]
            },
            "catalog": {
                "bucket": "basic-examples",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "2_Minutes_Cron",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Job planning",
                                "Building blocks",
                                "Cron"
                            ]
                        },
                        "file": "resources/catalog/2_minutes_cron.xml"
                    },
                    {
                        "name": "Start_At",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Job planning",
                                "Building blocks",
                                "Cron"
                            ]
                        },
                        "file": "resources/catalog/start_at.xml"
                    }
                ]
            }
        },
        "DatabaseServices": {
            "metadata": {
                "slug": "database-services",
                "name": "Data Visualization",
                "short_description": "Database services to automate database deployment and use",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DatabaseServices",
                "tags": [
                    "NoSQL",
                    "Elasticsearch",
                    "Greenplum",
                    "PostgreSQL",
                    "MySQL",
                    "Cassandra",
                    "MongoDB",
                    "Oracle",
                    "Data Base",
                    "SQL"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/pima-indians-diabetes.csv",
                    "resources/dataspace/star_wars_people.json"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "data-database-services",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "MySQL_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MySQL",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MySQL_Service_Start.xml"
                    },
                    {
                        "name": "MySQL_Database_Interaction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MySQL",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MySQL_Database_Interaction.xml"
                    },
                    {
                        "name": "MySQL_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MySQL",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MySQL_Service_Actions.xml"
                    },
                    {
                        "name": "PostgreSQL_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "PostgreSQL",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/PostgreSQL_Service_Start.xml"
                    },
                    {
                        "name": "PostgreSQL_Database_Interaction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "PostgreSQL",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/PostgreSQL_Database_Interaction.xml"
                    },
                    {
                        "name": "PostgreSQL_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "PostgreSQL",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/PostgreSQL_Service_Actions.xml"
                    },
                    {
                        "name": "MongoDB_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MongoDB",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MongoDB_Service_Start.xml"
                    },
                    {
                        "name": "MongoDB_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MongoDB",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MongoDB_Service_Actions.xml"
                    },
                    {
                        "name": "MongoDB_Database_Interaction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MongoDB",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MongoDB_Database_Interaction.xml"
                    },
                    {
                        "name": "Elasticsearch_Database_Interaction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Elasticsearch",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Elasticsearch_Database_Interaction.xml"
                    },
                    {
                        "name": "Elasticsearch_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Elasticsearch",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Elasticsearch_Service_Start.xml"
                    },
                    {
                        "name": "Elasticsearch_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Elasticsearch",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Elasticsearch_Service_Actions.xml"
                    },
                    {
                        "name": "Cassandra_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Cassandra",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Cassandra_Service_Start.xml"
                    },
                    {
                        "name": "Cassandra_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Cassandra",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Cassandra_Service_Actions.xml"
                    },
                    {
                        "name": "Cassandra_Database_Interaction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Cassandra",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Cassandra_Database_Interaction.xml"
                    },
                    {
                        "name": "Oracle_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Oracle",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Oracle_Service_Start.xml"
                    },
                    {
                        "name": "Oracle_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Oracle",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Oracle_Service_Actions.xml"
                    },
                    {
                        "name": "Oracle_Database_Interaction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Oracle",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Oracle_Database_Interaction.xml"
                    },
                    {
                        "name": "Greenplum_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Greenplum",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Greenplum_Service_Start.xml"
                    },
                    {
                        "name": "Greenplum_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Greenplum",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Greenplum_Service_Actions.xml"
                    },
                    {
                        "name": "Greenplum_Database_Interaction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "Greenplum",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Greenplum_Database_Interaction.xml"
                    }
                ]
            }
        },
        "Databricks": {
            "metadata": {
                "slug": "azure-databricks",
                "name": "Azure Databricks",
                "short_description": "Azure Databricks services",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Databricks",
                "tags": [
                    "REST API",
                    "Azure",
                    "REST",
                    "Big Data",
                    "API",
                    "Databricks",
                    "Spark",
                    "Web Service"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/Azure_Databricks/Azure_Databricks_Workspace_ARM_Template.json"
                ]
            },
            "catalog": {
                "bucket": "data-big-data",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Azure_Databricks_Create_Spark_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST API",
                                "Azure",
                                "Big Data",
                                "Databricks",
                                "Spark"
                            ]
                        },
                        "file": "resources/catalog/Azure_Databricks_Create_Spark_Cluster.xml"
                    },
                    {
                        "name": "Azure_Databricks_Delete_Spark_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST API",
                                "Azure",
                                "Big Data",
                                "Databricks",
                                "Spark"
                            ]
                        },
                        "file": "resources/catalog/Azure_Databricks_Delete_Spark_Cluster.xml"
                    },
                    {
                        "name": "Azure_Databricks_Resize_Spark_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST API",
                                "Azure",
                                "Big Data",
                                "Databricks",
                                "Spark"
                            ]
                        },
                        "file": "resources/catalog/Azure_Databricks_Resize_Spark_Cluster.xml"
                    },
                    {
                        "name": "Azure_Databricks_Submit_Spark_Job",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Azure_Databricks_Submit_Spark_Job.xml"
                    }
                ]
            }
        },
        "DataConnectors": {
            "metadata": {
                "slug": "dataconnectors",
                "name": "DataConnectors",
                "short_description": "Data Connectors",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DataConnectors",
                "tags": [
                    "S3",
                    "Azure",
                    "FTP",
                    "Greenplum",
                    "PostgreSQL",
                    "Cassandra",
                    "Data Warehouse",
                    "SFTP",
                    "SQL Server",
                    "Tableau",
                    "URL",
                    "SQL",
                    "Cloud Storage",
                    "FTPS",
                    "Data Connectors",
                    "NoSQL",
                    "Storage",
                    "Elasticsearch",
                    "MySQL",
                    "Snowflake",
                    "MongoDB",
                    "Data Lake",
                    "Oracle"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/sapjco3.jar",
                    "resources/dataspace/sapjco3.dll",
                    "resources/dataspace/libsapjco3.jnilib",
                    "resources/dataspace/libsapjco3.so",
                    "resources/dataspace/opencsv-4.1.jar",
                    "resources/dataspace/script.usql",
                    "resources/dataspace/aws-java-sdk-fat-1.11.228.jar",
                    "resources/dataspace/azure-storage-blob-fat-10.0.3-Preview.jar"
                ]
            },
            "catalog": {
                "bucket": "data-connectors",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "PostgreSQL",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "PostgreSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/PostgreSQL.xml"
                    },
                    {
                        "name": "Greenplum",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Greenplum",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Greenplum.xml"
                    },
                    {
                        "name": "MySQL",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "MySQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MySQL.xml"
                    },
                    {
                        "name": "Oracle",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "Oracle",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Oracle.xml"
                    },
                    {
                        "name": "SQL_Server",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL Server",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/SQL_Server.xml"
                    },
                    {
                        "name": "MongoDB",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "MongoDB",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MongoDB.xml"
                    },
                    {
                        "name": "Cassandra",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Cassandra",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Cassandra.xml"
                    },
                    {
                        "name": "Elasticsearch",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Elasticsearch",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/ElasticSearch.xml"
                    },
                    {
                        "name": "URL",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "URL",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/URL.xml"
                    },
                    {
                        "name": "FTP",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "FTP",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/FTP.xml"
                    },
                    {
                        "name": "FTPS",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "FTPS",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/FTPS.xml"
                    },
                    {
                        "name": "SFTP",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SFTP",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/SFTP.xml"
                    },
                    {
                        "name": "Azure_Blob_Storage",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "Azure",
                                "NoSQL",
                                "Storage",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Azure_Blob_Storage.xml"
                    },
                    {
                        "name": "Azure_Data_Lake",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "Azure",
                                "NoSQL",
                                "Data Warehouse",
                                "Data Lake",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Azure_Data_Lake.xml"
                    },
                    {
                        "name": "S3",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "S3",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/AWS_S3.xml"
                    },
                    {
                        "name": "Snowflake",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Snowflake",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Snowflake.xml"
                    },
                    {
                        "name": "SQL_Statements",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/SQL_Statements.xml"
                    },
                    {
                        "name": "SQL_Pooled_Connection_Query",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/SQL_Pooled_Connection_Query.xml"
                    },
                    {
                        "name": "SQL_Pooled_Connection_Update",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/SQL_Pooled_Connection_Update.xml"
                    },
                    {
                        "name": "Process_Rows_Automatically",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Process_Rows_Automatically.xml"
                    },
                    {
                        "name": "Database_Sequential_Queries",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Database_Sequential_Queries.xml"
                    },
                    {
                        "name": "Export_Data_To_Tableau_Server",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "Compact version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud Storage",
                                "Data Connectors",
                                "NoSQL",
                                "Data Warehouse",
                                "Tableau",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Export_Data_To_Tableau_Server.xml"
                    }
                ]
            }
        },
        "DataConnectorScripts": {
            "metadata": {
                "slug": "scripts",
                "name": "Scripts",
                "short_description": "Data connector scripts",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DataConnectorScripts",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "data-connectors",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "ExportToFileSystem",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/ExportToFileSystem.groovy"
                    },
                    {
                        "name": "ImportFromFileSystem",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/ImportFromFileSystem.groovy"
                    },
                    {
                        "name": "ExportToSqlDB",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/export_to_SQL_DB.py"
                    },
                    {
                        "name": "ImportFromSqlDB",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/import_from_SQL_DB.py"
                    },
                    {
                        "name": "Export_Data_To_Tableau_Server_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Export_Data_To_Tableau_Server_Script.py"
                    },
                    {
                        "name": "ParseEndpoint",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Parse_Endpoint.groovy"
                    },
                    {
                        "name": "SQL_Pooled_Connection_Query_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/SQL_Pooled_Connection_Query_Script.groovy"
                    },
                    {
                        "name": "SQL_Pooled_Connection_Update_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/SQL_Pooled_Connection_Update_Script.groovy"
                    }
                ]
            }
        },
        "DataStreaming": {
            "metadata": {
                "slug": "big-data-streaming-example",
                "name": "Big Data Kafka-Storm-Visdom Dataflow",
                "short_description": "Data Stream Processing using Kafka-Storm-Visdom",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DataStreaming",
                "tags": [
                    "Streaming",
                    "Storm",
                    "Zookeeper",
                    "Big Data",
                    "Kafka",
                    "Visdom",
                    "Dataflow"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/BitcoinExchangeDataflow-1.0.jar",
                    "resources/dataspace/BitcoinExchangeDataflow.yaml",
                    "resources/dataspace/BitcoinExchangeDataflow.properties",
                    "resources/dataspace/visdomRateClient.py",
                    "resources/dataspace/visdomGapClient.py",
                    "resources/dataspace/visdomAlertClient.py"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "data-big-data",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Kafka_Storm_Visdom_Dataflow",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Streaming",
                                "Storm",
                                "Zookeeper",
                                "Big Data",
                                "Kafka",
                                "Visdom",
                                "Dataflow"
                            ]
                        },
                        "file": "resources/catalog/Kafka_Storm_Visdom_Dataflow.xml"
                    }
                ]
            }
        },
        "DataVisualization": {
            "metadata": {
                "slug": "ai-data-analysis-visualization",
                "name": "Data Visualization",
                "short_description": "Data visualization for machine learning workflows",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DataVisualization",
                "tags": [
                    "Tensorboard",
                    "Samples",
                    "Big Data",
                    "Data Visualization",
                    "Knime",
                    "Visdom",
                    "Machine Learning",
                    "Analytics",
                    "Deep Learning"
                ]
            },
            "catalog": {
                "bucket": "ai-data-analysis-visualization",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Visdom_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Visdom",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Visdom_Service_Start.xml"
                    },
                    {
                        "name": "Visdom_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Visdom",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Visdom_Service_Actions.xml"
                    },
                    {
                        "name": "Visdom_Visualize_Results",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Visdom",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Visdom_Visualize_Results.xml"
                    },
                    {
                        "name": "Visdom_Plots",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Visdom",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Visdom_Plots.xml"
                    },
                    {
                        "name": "Visdom_Plots_Example",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Visdom",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Visdom_Plots_Example.xml"
                    },
                    {
                        "name": "Visdom_Realtime_Digit_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Visdom",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Visdom_Realtime_Digit_Classification.xml"
                    },
                    {
                        "name": "Tensorboard_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Tensorboard",
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Tensorboard_Service_Start.xml"
                    },
                    {
                        "name": "Tensorboard_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Tensorboard",
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Tensorboard_Service_Actions.xml"
                    },
                    {
                        "name": "Tensorboard_Realtime_CIFAR10_Training",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Tensorboard",
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Tensorboard_Realtime_CIFAR10_Training.xml"
                    },
                    {
                        "name": "Tensorboard_Plots_Example",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Tensorboard",
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Tensorboard_Plots_Example.xml"
                    },
                    {
                        "name": "Check_Visdom_Support",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Visdom",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Check_Visdom_Support.xml"
                    },
                    {
                        "name": "Check_Tensorboard_Support",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Tensorboard",
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Check_Tensorboard_Support.xml"
                    },
                    {
                        "name": "Knime_Execute_Job",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Knime",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Knime_Execute_Job.xml"
                    },
                    {
                        "name": "Knime_Get_Workflow_Infos",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Knime",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Knime_Get_Workflow_Infos.xml"
                    },
                    {
                        "name": "Knime_Get_Workflow_Jobs",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Data Visualization",
                                "Knime",
                                "Machine Learning",
                                "Analytics",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Knime_Get_Workflow_Jobs.xml"
                    },
                    {
                        "name": "Visdom_Visualize_Results_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Visdom Scripts"
                        },
                        "file": "resources/catalog/Visdom_Visualize_Results_Script.py"
                    },
                    {
                        "name": "Visdom_Plots_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Visdom Scripts"
                        },
                        "file": "resources/catalog/Visdom_Plots_Script.py"
                    },
                    {
                        "name": "Visdom_Train_CNN_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Visdom Scripts"
                        },
                        "file": "resources/catalog/Visdom_Train_CNN_Script.py"
                    }
                ]
            }
        },
        "DeepLearning": {
            "metadata": {
                "slug": "deeplearning",
                "name": "Deep Learning",
                "short_description": "Deep learning tasks",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DeepLearning",
                "tags": [
                    "Segmentation",
                    "Natural Language Processing",
                    "Text Analysis",
                    "Image Analysis",
                    "Machine Learning",
                    "Deep Learning",
                    "Training",
                    "Input",
                    "Classification",
                    "Output",
                    "Model explainability",
                    "Computer Vision",
                    "Detection",
                    "Train"
                ]
            },
            "catalog": {
                "bucket": "ai-deep-learning",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "AlexNet",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/AlexNet.xml"
                    },
                    {
                        "name": "DenseNet_161",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/DenseNet_161.xml"
                    },
                    {
                        "name": "Import_Image_Dataset",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Input",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Import_Image_Dataset.xml"
                    },
                    {
                        "name": "Predict_Image_Classification_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Predict_Image_Classification_Model.xml"
                    },
                    {
                        "name": "ResNet_18",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/ResNet_18.xml"
                    },
                    {
                        "name": "Train_Image_Classification_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Train_Image_Classification_Model.xml"
                    },
                    {
                        "name": "VGG_16",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/VGG_16.xml"
                    },
                    {
                        "name": "Download_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Input",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Download_Model.xml"
                    },
                    {
                        "name": "Import_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Input",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Import_Model.xml"
                    },
                    {
                        "name": "Import_Text_Dataset",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Input",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Import_Text_Dataset.xml"
                    },
                    {
                        "name": "Preview_Results",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Output",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Preview_Results.xml"
                    },
                    {
                        "name": "Export_Images",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Output",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Export_Images.xml"
                    },
                    {
                        "name": "GRU",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/GRU.xml"
                    },
                    {
                        "name": "LSTM",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/LSTM.xml"
                    },
                    {
                        "name": "RNN",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/RNN.xml"
                    },
                    {
                        "name": "Train_Text_Classification_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Train_Text_Classification_Model.xml"
                    },
                    {
                        "name": "Predict_Text_Classification_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Predict_Text_Classification_Model.xml"
                    },
                    {
                        "name": "FCN",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Segmentation",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/FCN.xml"
                    },
                    {
                        "name": "SegNet",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Segmentation",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/SegNet.xml"
                    },
                    {
                        "name": "UNet",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Classification",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/UNet.xml"
                    },
                    {
                        "name": "Train_Image_Segmentation_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Train",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Train_Image_Segmentation_Model.xml"
                    },
                    {
                        "name": "Predict_Image_Segmentation_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Segmentation",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Predict_Image_Segmentation_Model.xml"
                    },
                    {
                        "name": "Predict_Image_Object_Detection_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Detection",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Predict_Image_Object_Detection_Model.xml"
                    },
                    {
                        "name": "SSD",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Detection",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/SSD.xml"
                    },
                    {
                        "name": "Train_Image_Object_Detection_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Detection",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Train_Image_Object_Detection_Model.xml"
                    },
                    {
                        "name": "Model_Explainability",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Model explainability",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Model_Explainability.xml"
                    },
                    {
                        "name": "Search_Image_Dataset",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Input",
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Search_Image_Dataset.xml"
                    },
                    {
                        "name": "YOLO",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Natural Language Processing",
                                "Text Analysis",
                                "Computer Vision",
                                "Image Analysis",
                                "Detection",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/YOLO.xml"
                    },
                    {
                        "name": "AlexNet_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/AlexNet_Script.py"
                    },
                    {
                        "name": "DenseNet_161_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/DenseNet_161_Script.py"
                    },
                    {
                        "name": "Download_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Download_Model_Script.py"
                    },
                    {
                        "name": "Export_Images_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Export_Images_Script.py"
                    },
                    {
                        "name": "FCN_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/FCN_Script.py"
                    },
                    {
                        "name": "GRU_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/GRU_Script.py"
                    },
                    {
                        "name": "Import_Image_Dataset_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Import_Image_Dataset_Script.py"
                    },
                    {
                        "name": "Import_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Import_Model_Script.py"
                    },
                    {
                        "name": "Import_Text_Dataset_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Import_Text_Dataset_Script.py"
                    },
                    {
                        "name": "LSTM_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/LSTM_Script.py"
                    },
                    {
                        "name": "Predict_Image_Classification_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Predict_Image_Classification_Model_Script.py"
                    },
                    {
                        "name": "Predict_Image_Segmentation_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Predict_Image_Segmentation_Model_Script.py"
                    },
                    {
                        "name": "Predict_Image_Object_Detection_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Predict_Image_Object_Detection_Model_Script.py"
                    },
                    {
                        "name": "Predict_Text_Classification_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Predict_Text_Classification_Model_Script.py"
                    },
                    {
                        "name": "Preview_Results_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Preview_Results_Script.py"
                    },
                    {
                        "name": "ResNet_18_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/ResNet_18_Script.py"
                    },
                    {
                        "name": "RNN_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/RNN_Script.py"
                    },
                    {
                        "name": "SegNet_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/SegNet_Script.py"
                    },
                    {
                        "name": "SSD_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/SSD_Script.py"
                    },
                    {
                        "name": "Train_Image_Classification_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Train_Image_Classification_Model_Script.py"
                    },
                    {
                        "name": "Train_Image_Segmentation_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Train_Image_Segmentation_Model_Script.py"
                    },
                    {
                        "name": "Train_Text_Classification_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Train_Text_Classification_Model_Script.py"
                    },
                    {
                        "name": "Train_Image_Object_Detection_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Train_Image_Object_Detection_Model_Script.py"
                    },
                    {
                        "name": "UNet_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/UNet_Script.py"
                    },
                    {
                        "name": "VGG_16_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/VGG_16_Script.py"
                    },
                    {
                        "name": "Model_Explainability_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Model_Explainability_Script.py"
                    },
                    {
                        "name": "Search_Image_Dataset_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Search_Image_Dataset_Script.py"
                    },
                    {
                        "name": "YOLO_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/YOLO_Script.py"
                    }
                ]
            }
        },
        "DeepLearningWorkflows": {
            "metadata": {
                "slug": "deeplearningworkflows",
                "name": "Deep Learning Workflows",
                "short_description": "Example of deep learning workflows.",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DeepLearningWorkflows",
                "tags": [
                    "Azure",
                    "Horovod",
                    "Segmentation",
                    "Cognitive Services",
                    "Artificial Intelligence",
                    "Machine Learning",
                    "Deep Learning",
                    "Cognitive Toolkit",
                    "Training",
                    "PyTorch",
                    "Slurm",
                    "Docker",
                    "Cloud",
                    "Classification",
                    "Model explainability",
                    "Microsoft",
                    "Keras",
                    "Detection",
                    "TensorFlow"
                ]
            },
            "catalog": {
                "bucket": "ai-deep-learning-workflows",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Emotion_Detection_In_Bing_Images",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Emotion_Detection_In_Bing_Images.xml"
                    },
                    {
                        "name": "Sentiment_Analysis_In_Bing_News",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Sentiment_Analysis_In_Bing_News.xml"
                    },
                    {
                        "name": "IMDB_Sentiment_Analysis",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/IMDB_Sentiment_Analysis.xml"
                    },
                    {
                        "name": "Custom_Sentiment_Analysis_In_Bing_News",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Azure",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Custom_Sentiment_Analysis_In_Bing_News.xml"
                    },
                    {
                        "name": "Image_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "PyTorch",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Classification",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Image_Classification.xml"
                    },
                    {
                        "name": "Language_Detection",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Language_Detection.xml"
                    },
                    {
                        "name": "CNTK_ConvNet",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Microsoft",
                                "Machine Learning",
                                "Deep Learning",
                                "Cognitive Toolkit"
                            ]
                        },
                        "file": "resources/catalog/CNTK_ConvNet.xml"
                    },
                    {
                        "name": "CNTK_SimpleNet",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Microsoft",
                                "Machine Learning",
                                "Deep Learning",
                                "Cognitive Toolkit"
                            ]
                        },
                        "file": "resources/catalog/CNTK_SimpleNet.xml"
                    },
                    {
                        "name": "GAN_Generate_Fake_MNIST_Images",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Microsoft",
                                "Machine Learning",
                                "Deep Learning",
                                "Cognitive Toolkit"
                            ]
                        },
                        "file": "resources/catalog/GAN_Generate_Fake_MNIST_Images.xml"
                    },
                    {
                        "name": "DCGAN_Generate_Fake_MNIST_Images",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Microsoft",
                                "Machine Learning",
                                "Deep Learning",
                                "Cognitive Toolkit"
                            ]
                        },
                        "file": "resources/catalog/DCGAN_Generate_Fake_MNIST_Images.xml"
                    },
                    {
                        "name": "Fake_Celebritiy_Faces_Generation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "PyTorch",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Fake_Celebritiy_Faces_Generation.xml"
                    },
                    {
                        "name": "Image_Segmentation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "PyTorch",
                                "Segmentation",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Image_Segmentation.xml"
                    },
                    {
                        "name": "Train_Image_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Train_Image_Classification.xml"
                    },
                    {
                        "name": "Train_Image_Segmentation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Train_Image_Segmentation.xml"
                    },
                    {
                        "name": "Train_Image_Object_Detection",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Train_Image_Object_Detection.xml"
                    },
                    {
                        "name": "Deep_Model_Explainability",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Model explainability",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Deep_Model_Explainability.xml"
                    },
                    {
                        "name": "Image_Object_Detection",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "PyTorch",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Detection",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Image_Object_Detection.xml"
                    },
                    {
                        "name": "Search_Train_Image_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "Training",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Search_Train_Image_Classification.xml"
                    },
                    {
                        "name": "Search_Classify_Images",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "first version",
                            "contentType": "application/xml",
                            "tags": [
                                "PyTorch",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Classification",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Search_Classify_Images.xml"
                    },
                    {
                        "name": "Horovod_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Horovod",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Horovod_Task.xml"
                    },
                    {
                        "name": "Horovod_Slurm_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Horovod",
                                "Slurm",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Horovod_Slurm_Task.xml"
                    },
                    {
                        "name": "Horovod_Docker_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Horovod",
                                "Docker",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Horovod_Docker_Task.xml"
                    },
                    {
                        "name": "TensorFlow_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning",
                                "TensorFlow"
                            ]
                        },
                        "file": "resources/catalog/TensorFlow_Task.xml"
                    },
                    {
                        "name": "Keras_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Keras",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/Keras_Task.xml"
                    },
                    {
                        "name": "PyTorch_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "PyTorch",
                                "Cognitive Services",
                                "Artificial Intelligence",
                                "Cloud",
                                "Machine Learning",
                                "Deep Learning"
                            ]
                        },
                        "file": "resources/catalog/PyTorch_Task.xml"
                    }
                ]
            }
        },
        "DockerBasics": {
            "metadata": {
                "slug": "dockerbasics",
                "name": "Docker",
                "short_description": "Use docker environment within a task",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DockerBasics",
                "tags": [
                    "Docker",
                    "Samples",
                    "Building blocks"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "basic-examples",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Docker_Exec_Env",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Docker",
                                "Samples",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/docker_exec_env.xml"
                    }
                ]
            }
        },
        "DockerSwarm": {
            "metadata": {
                "slug": "docker-swarm",
                "name": "Docker Swarm",
                "short_description": "Lifecycle management and config workflows for Docker Swarm",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/DockerSwarm",
                "tags": [
                    "Swarm",
                    "Container",
                    "Docker",
                    "VM",
                    "Big Data",
                    "Service Automation"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Docker_Swarm",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Swarm",
                                "Container",
                                "Docker",
                                "VM",
                                "Big Data",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Docker_Swarm.xml"
                    },
                    {
                        "name": "Finish_Docker_Swarm",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Swarm",
                                "Container",
                                "Docker",
                                "VM",
                                "Big Data",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Finish_Docker_Swarm.xml"
                    }
                ]
            }
        },
        "Edge": {
            "metadata": {
                "slug": "Edge computing workflow examples",
                "name": "Edge computing workflow examples",
                "short_description": "Edge computing workflows to showcase the capability of ProActive in handling Edge nodes with limited computing resources",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Edge",
                "tags": [
                    "Serf",
                    "Distributed",
                    "Controls",
                    "ARM",
                    "Edge",
                    "Get started",
                    "Building blocks"
                ]
            },
            "catalog": {
                "bucket": "it-edge-applications",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "On_Edge_Distributed_Computing_Pi",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Serf",
                                "Distributed",
                                "ARM",
                                "Edge"
                            ]
                        },
                        "file": "resources/catalog/On_Edge_Distributed_Computing_Pi.xml"
                    },
                    {
                        "name": "On_Edge_Partial_Distributed_Computing_Pi",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Serf",
                                "Distributed",
                                "ARM",
                                "Edge"
                            ]
                        },
                        "file": "resources/catalog/On_Edge_Partial_Distributed_Computing_Pi.xml"
                    },
                    {
                        "name": "Install_Serf",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Serf",
                                "Distributed",
                                "ARM",
                                "Edge"
                            ]
                        },
                        "file": "resources/catalog/Install_Serf.xml"
                    },
                    {
                        "name": "Create_Serf_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Serf",
                                "Distributed",
                                "ARM",
                                "Edge"
                            ]
                        },
                        "file": "resources/catalog/Create_Serf_Cluster.xml"
                    },
                    {
                        "name": "Get_Serf_Latencies",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Serf",
                                "Distributed",
                                "ARM",
                                "Edge"
                            ]
                        },
                        "file": "resources/catalog/Get_Serf_Latencies.xml"
                    },
                    {
                        "name": "Get_Serf_Latencies_Continuous",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Controls",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/Get_Serf_Latencies_Continuous.xml"
                    }
                ]
            }
        },
        "Elasticsearch": {
            "metadata": {
                "slug": "elasticsearch",
                "name": "Elasticsearch",
                "short_description": "Lifecycle management workflow of Elasticsearch Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Elasticsearch",
                "tags": [
                    "Big Data",
                    "Elasticsearch",
                    "Service Automation",
                    "Data Base"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Elasticsearch",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Elasticsearch",
                                "Big Data",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Elasticsearch.xml"
                    },
                    {
                        "name": "Finish_Elasticsearch",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Elasticsearch",
                                "Big Data",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Finish_Elasticsearch.xml"
                    },
                    {
                        "name": "Resume_Elasticsearch",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Elasticsearch",
                                "Big Data",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Resume_Elasticsearch.xml"
                    },
                    {
                        "name": "Pause_Elasticsearch",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Elasticsearch",
                                "Big Data",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Pause_Elasticsearch.xml"
                    }
                ]
            }
        },
        "ELK": {
            "metadata": {
                "slug": "elk",
                "name": "ELK Stack",
                "short_description": "ELK (Elasticsearch, Logstash, and Kibana) Stack",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/ELK",
                "tags": [
                    "Kibana",
                    "Elasticsearch",
                    "ELK",
                    "Samples",
                    "Twitter",
                    "Logstash"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "data-elastic-logstash-kibana",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Elasticsearch_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Elasticsearch",
                                "Samples"
                            ]
                        },
                        "file": "resources/catalog/Elasticsearch_Service_Start.xml"
                    },
                    {
                        "name": "Kibana_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Samples"
                            ]
                        },
                        "file": "resources/catalog/Kibana_Service_Start.xml"
                    },
                    {
                        "name": "Logstash_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Logstash"
                            ]
                        },
                        "file": "resources/catalog/Logstash_Service_Start.xml"
                    },
                    {
                        "name": "Logstash_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Logstash"
                            ]
                        },
                        "file": "resources/catalog/Logstash_Service_Actions.xml"
                    },
                    {
                        "name": "Kibana_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Samples"
                            ]
                        },
                        "file": "resources/catalog/Kibana_Service_Actions.xml"
                    },
                    {
                        "name": "Elasticsearch_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Elasticsearch",
                                "Samples"
                            ]
                        },
                        "file": "resources/catalog/Elasticsearch_Service_Actions.xml"
                    },
                    {
                        "name": "Test_Elasticsearch_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Elasticsearch",
                                "Samples"
                            ]
                        },
                        "file": "resources/catalog/Test_Elasticsearch_Service.xml"
                    },
                    {
                        "name": "Test_ELK_Stack",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Elasticsearch",
                                "ELK",
                                "Samples",
                                "Logstash"
                            ]
                        },
                        "file": "resources/catalog/Test_ELK_Stack.xml"
                    },
                    {
                        "name": "Test_Kibana_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Samples"
                            ]
                        },
                        "file": "resources/catalog/Test_Kibana_Service.xml"
                    },
                    {
                        "name": "Test_Logstash_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Logstash"
                            ]
                        },
                        "file": "resources/catalog/Test_Logstash_Service.xml"
                    },
                    {
                        "name": "Twitter_Streaming_Analysis",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Twitter"
                            ]
                        },
                        "file": "resources/catalog/Twitter_Streaming_Analysis.xml"
                    },
                    {
                        "name": "Apache_Logs_Analysis",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Logstash"
                            ]
                        },
                        "file": "resources/catalog/Apache_Logs_Analysis.xml"
                    },
                    {
                        "name": "Energy_Consumption_Analysis",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Elasticsearch",
                                "ELK",
                                "Samples",
                                "Logstash"
                            ]
                        },
                        "file": "resources/catalog/Energy_Consumption_Analysis.xml"
                    }
                ]
            }
        },
        "Email": {
            "metadata": {
                "slug": "emails",
                "name": "Email",
                "short_description": "Notification emails",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Email",
                "tags": [
                    "Messaging",
                    "Email",
                    "Notification"
                ]
            },
            "catalog": {
                "bucket": "control-notification",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Email_Notification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Email",
                                "Messaging",
                                "Notification"
                            ]
                        },
                        "file": "resources/catalog/email.xml"
                    },
                    {
                        "name": "Email_Validation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Email",
                                "Messaging",
                                "Notification"
                            ]
                        },
                        "file": "resources/catalog/email_validation.xml"
                    },
                    {
                        "name": "Send_Results_By_Email",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Email",
                                "Messaging",
                                "Notification"
                            ]
                        },
                        "file": "resources/catalog/Send_Results_By_Email.xml"
                    }
                ]
            }
        },
        "FederatedLearning": {
            "metadata": {
                "slug": "ai-federated-learning",
                "name": "FederatedLearning",
                "short_description": "Federated Learning workflows",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/FederatedLearning",
                "tags": [
                    "FederatedLearning",
                    "DistributedLearning",
                    "DeepLearning",
                    "MachineLearning"
                ]
            },
            "catalog": {
                "bucket": "ai-federated-learning",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "PyTorch_FL_Client_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "FederatedLearning",
                                "DistributedLearning",
                                "DeepLearning",
                                "MachineLearning"
                            ]
                        },
                        "file": "resources/catalog/PyTorch_FL_Client_Task.xml"
                    },
                    {
                        "name": "PyTorch_FL_Server_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "FederatedLearning",
                                "DistributedLearning",
                                "DeepLearning",
                                "MachineLearning"
                            ]
                        },
                        "file": "resources/catalog/PyTorch_FL_Server_Task.xml"
                    },
                    {
                        "name": "TensorFlow_FL_Client_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "FederatedLearning",
                                "DistributedLearning",
                                "DeepLearning",
                                "MachineLearning"
                            ]
                        },
                        "file": "resources/catalog/TensorFlow_FL_Client_Task.xml"
                    },
                    {
                        "name": "TensorFlow_FL_Server_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "FederatedLearning",
                                "DistributedLearning",
                                "DeepLearning",
                                "MachineLearning"
                            ]
                        },
                        "file": "resources/catalog/TensorFlow_FL_Server_Task.xml"
                    },
                    {
                        "name": "PyTorch_Federated_Learning_Example",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "FederatedLearning",
                                "DistributedLearning",
                                "DeepLearning",
                                "MachineLearning"
                            ]
                        },
                        "file": "resources/catalog/PyTorch_Federated_Learning_Example.xml"
                    },
                    {
                        "name": "TensorFlow_Federated_Learning_Example",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "FederatedLearning",
                                "DistributedLearning",
                                "DeepLearning",
                                "MachineLearning"
                            ]
                        },
                        "file": "resources/catalog/TensorFlow_Federated_Learning_Example.xml"
                    }
                ]
            }
        },
        "FileFolderManagement": {
            "metadata": {
                "slug": "filefoldermanagement",
                "name": "File & Folder Management",
                "short_description": "A few samples to mainpulate file, folders, directories and set triggers",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/FileFolderManagement",
                "tags": [
                    "Folder",
                    "File",
                    "Samples",
                    "Building blocks",
                    "Directory"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "basic-examples",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Data_Management",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Folder",
                                "File",
                                "Building blocks",
                                "Directory"
                            ]
                        },
                        "file": "resources/catalog/data_management.xml"
                    },
                    {
                        "name": "Print_File_Name",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Folder",
                                "File",
                                "Building blocks",
                                "Directory"
                            ]
                        },
                        "file": "resources/catalog/print_file_name.xml"
                    }
                ]
            }
        },
        "Finance": {
            "metadata": {
                "slug": "finance",
                "name": "Finance",
                "short_description": "Samples in computational finance",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Finance",
                "tags": [
                    "QuantLib",
                    "Cpp",
                    "Pycuda",
                    "Finance",
                    "VaR",
                    "Pricing",
                    "Bale",
                    "Risk",
                    "Solvency",
                    "OpenCL",
                    "Black-Scholes"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/assets.txt",
                    "resources/dataspace/bonds.txt",
                    "resources/dataspace/bondsSimulations",
                    "resources/dataspace/assets_correlations.txt",
                    "resources/dataspace/DualAxisChart.jar",
                    "resources/dataspace/jcommon-1.0.6.jar",
                    "resources/dataspace/jfreechart-1.0.2.jar",
                    "resources/dataspace/ptfPnLSimulations",
                    "resources/dataspace/MonteCarlo",
                    "resources/dataspace/montecarlo.cl"
                ]
            },
            "catalog": {
                "bucket": "hpc-finance",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Bench_EUR_Stock_Option_Pricing",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "OpenCL",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Bench_EUR_Stock_Option_Pricing.xml"
                    },
                    {
                        "name": "Mark_To_Future_Cube_Stats",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Mark_To_Future_Cube_Stats.xml"
                    },
                    {
                        "name": "Mark_To_Future_Cubelet",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Mark_To_Future_Cubelet.xml"
                    },
                    {
                        "name": "Delta_Call",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Delta_Call.xml"
                    },
                    {
                        "name": "EUR_Stock_Option_Pricing",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Pycuda",
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/EUR_Stock_Option_Pricing.xml"
                    },
                    {
                        "name": "Incremental_Monte_Carlo_VaR_Each_Portfolio_Asset",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "VaR",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Incremental_Monte_Carlo_VaR_Each_Portfolio_Asset.xml"
                    },
                    {
                        "name": "Monte_Carlo_VaR_Portfolio",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "VaR",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Monte_Carlo_VaR_portfolio.xml"
                    },
                    {
                        "name": "Monte_Carlo_VaR_Portfolio_MC_Interactive_Control",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "VaR",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Monte_Carlo_VaR_Portfolio_MC_Interactive_Control.xml"
                    },
                    {
                        "name": "QuantLib",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/QuantLib.xml"
                    },
                    {
                        "name": "Stress_Testing_Monte_Carlo_Value_Portfolio",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Stress_Testing_Monte_Carlo_Value_Portfolio.xml"
                    },
                    {
                        "name": "Stress_Testing_Monte_Carlo_Value_Portfolio_MC_Interactive_Control",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "QuantLib",
                                "Cpp",
                                "Finance",
                                "Pricing",
                                "Bale",
                                "Risk",
                                "Solvency",
                                "Black-Scholes"
                            ]
                        },
                        "file": "resources/catalog/Stress_Testing_Monte_Carlo_Value_Portfolio_MC_Interactive_Control.xml"
                    }
                ]
            }
        },
        "FluidDynamicsCFDParaviewFlexnetPBS": {
            "metadata": {
                "slug": "fluid-dynamics-cfd-paraview-flexnet-pbs",
                "name": "Fluid dynamics CFD Paraview Flexnet PBS",
                "short_description": "Computational fluid dynamics",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/FluidDynamicsCFDParaviewFlexnetPBS",
                "tags": [
                    "CFD",
                    "PBS",
                    "LaBS",
                    "Solver",
                    "Flexnet",
                    "PostLaBS",
                    "Fluid dynamics",
                    "Paraview",
                    "Ini",
                    "Optimization"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/Solve_labs_TO_BE_SUBMITTED.xml",
                    "resources/dataspace/Start_Flexnet_TO_BE_SUBMITTED.xml",
                    "resources/dataspace/Start_LaBSGUI_TO_BE_SUBMITTED.xml",
                    "resources/dataspace/Start_Paraview_client_TO_BE_SUBMITTED.xml",
                    "resources/dataspace/Start_Paraview_server_TO_BE_SUBMITTED.xml",
                    "resources/dataspace/commons-jexl3-3.0.jar",
                    "resources/dataspace/ini_template_0.txt",
                    "resources/dataspace/ini_template_1.txt",
                    "resources/dataspace/log_tube_impedance_ferme_pulse_v0m_s_porous_0.txt",
                    "resources/dataspace/log_tube_impedance_ferme_pulse_v0m_s_porous_1.txt",
                    "resources/dataspace/log_tube_impedance_ferme_pulse_v0m_s_porous_2.txt",
                    "resources/dataspace/mapping_logs_ini_templates.txt"
                ]
            },
            "catalog": {
                "bucket": "hpc-cfd-paraview-pbs",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Flexnet_Start",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Flexnet",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/Flexnet_start.xml"
                    },
                    {
                        "name": "Flexnet_Stop",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Flexnet",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/Flexnet_stop.xml"
                    },
                    {
                        "name": "Generate_Multiple_INI",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Ini"
                            ]
                        },
                        "file": "resources/catalog/Generate_multiple_ini.xml"
                    },
                    {
                        "name": "Generate_Multiple_Labs",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/Generate_multiple_labs.xml"
                    },
                    {
                        "name": "LaBSGUI_Deploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSGUI_deploy.xml"
                    },
                    {
                        "name": "LaBSGUI_Start",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSGUI_start.xml"
                    },
                    {
                        "name": "LaBSGUI_Stop",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSGUI_stop.xml"
                    },
                    {
                        "name": "LaBSGUI_Undeploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSGUI_undeploy.xml"
                    },
                    {
                        "name": "LaBSsolver_Deploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Solver",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSsolver_deploy.xml"
                    },
                    {
                        "name": "LaBSsolver_Multiple",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Solver",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSsolver_multiple.xml"
                    },
                    {
                        "name": "LaBSsolver_PBS_Multiple",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Solver",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSsolver_PBS_multiple.xml"
                    },
                    {
                        "name": "LaBSsolver_PBS_NS_Multiple",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "PBS",
                                "LaBS",
                                "Solver",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSsolver_PBS_NS_multiple.xml"
                    },
                    {
                        "name": "LaBSsolver_Undeploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "LaBS",
                                "Solver",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/LaBSsolver_undeploy.xml"
                    },
                    {
                        "name": "Optimize_Mesh_Size",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Optimization"
                            ]
                        },
                        "file": "resources/catalog/Optimize_mesh_size.xml"
                    },
                    {
                        "name": "Paraview_Client_Start",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Paraview"
                            ]
                        },
                        "file": "resources/catalog/Paraview_client_start.xml"
                    },
                    {
                        "name": "Paraview_Client_Stop",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Paraview"
                            ]
                        },
                        "file": "resources/catalog/Paraview_client_stop.xml"
                    },
                    {
                        "name": "Paraview_Deploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Paraview"
                            ]
                        },
                        "file": "resources/catalog/Paraview_deploy.xml"
                    },
                    {
                        "name": "Paraview_Multiple",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Paraview"
                            ]
                        },
                        "file": "resources/catalog/Paraview_multiple.xml"
                    },
                    {
                        "name": "Paraview_Server_Start",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Paraview"
                            ]
                        },
                        "file": "resources/catalog/Paraview_server_start.xml"
                    },
                    {
                        "name": "Paraview_Server_Stop",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Paraview"
                            ]
                        },
                        "file": "resources/catalog/Paraview_server_stop.xml"
                    },
                    {
                        "name": "Paraview_Undeploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "Fluid dynamics",
                                "Paraview"
                            ]
                        },
                        "file": "resources/catalog/Paraview_undeploy.xml"
                    },
                    {
                        "name": "PostLaBS_Deploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "PostLaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/PostLaBS_deploy.xml"
                    },
                    {
                        "name": "PostLaBS_Multiple",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "PostLaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/PostLaBS_multiple.xml"
                    },
                    {
                        "name": "PostLaBS_Undeploy",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "CFD",
                                "PostLaBS",
                                "Fluid dynamics"
                            ]
                        },
                        "file": "resources/catalog/PostLaBS_undeploy.xml"
                    }
                ]
            }
        },
        "GetStarted": {
            "metadata": {
                "slug": "get-started",
                "name": "Get Started",
                "short_description": "A few samples to get started",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/GetStarted",
                "tags": [
                    "Linux",
                    "Samples",
                    "MPI",
                    "Windows",
                    "Get started",
                    "Building blocks"
                ]
            },
            "catalog": {
                "bucket": "basic-examples",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Distributed_Computing_Pi",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/distributed_computing_PI.xml"
                    },
                    {
                        "name": "MPI_Job",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "MPI",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/mpi_job.xml"
                    },
                    {
                        "name": "Multi_Node_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/multi_node_task.xml"
                    },
                    {
                        "name": "Native_Task",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Linux"
                            ]
                        },
                        "file": "resources/catalog/native_task.xml"
                    },
                    {
                        "name": "Native_Task_Linux",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Linux"
                            ]
                        },
                        "file": "resources/catalog/native_task_linux.xml"
                    },
                    {
                        "name": "Native_Task_Windows",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Windows"
                            ]
                        },
                        "file": "resources/catalog/native_task_windows.xml"
                    },
                    {
                        "name": "Pre_Post_Clean_Scripts",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/pre_post_clean_scripts.xml"
                    },
                    {
                        "name": "Selection_Scripts",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/selection_scripts.xml"
                    },
                    {
                        "name": "Variables_Propagation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation.xml"
                    },
                    {
                        "name": "File_Upload",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/file_upload.xml"
                    },
                    {
                        "name": "Container_Platform_Selection",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/container_platform_selection.xml"
                    },
                    {
                        "name": "In_Memory_Workflow",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/in_memory_workflow.xml"
                    },
                    {
                        "name": "Parallel_Image_Processing",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/parallel_image_processing.xml"
                    },
                    {
                        "name": "Show_GPU_Utilization",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/show_gpu_utilization.xml"
                    },
                    {
                        "name": "Python_VirtualEnv",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/Python_VirtualEnv.xml"
                    },
                    {
                        "name": "Signal_With_Variables_Interactive_Control",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/signal_with_variables_interactive_control.xml"
                    },
                    {
                        "name": "Result_Metadata",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/resultmetadata_workflow.xml"
                    },
                    {
                        "name": "External_Endpoints_With_Wait_For_Signal",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/External_Endpoints_with_Wait_For_Signal.xml"
                    }
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/canny-edge-detector.jar",
                    "resources/dataspace/mysql-connector-java-8.0.22.jar",
                    "resources/dataspace/neptune_triton_01_3000x3000.jpg",
                    "resources/dataspace/com.springsource.tcl.lang.jacl-1.4.1.jar",
                    "resources/dataspace/org.apache.servicemix.bundles.oro-2.0.8_6.jar",
                    "resources/dataspace/expect4j-1.9.jar"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            }
        },
        "Greenplum": {
            "metadata": {
                "slug": "greenplum",
                "name": "Greenplum",
                "short_description": "Lifecycle management workflow of Greenplum Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Greenplum",
                "tags": [
                    "Service Automation",
                    "Greenplum",
                    "Data Base",
                    "SQL"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Greenplum",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Greenplum",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Greenplum.xml"
                    },
                    {
                        "name": "Finish_Greenplum",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Greenplum",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Finish_Greenplum.xml"
                    },
                    {
                        "name": "Pause_Greenplum",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Greenplum",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Pause_Greenplum.xml"
                    },
                    {
                        "name": "Resume_Greenplum",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Greenplum",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Resume_Greenplum.xml"
                    }
                ]
            }
        },
        "H2O": {
            "metadata": {
                "slug": "h2o",
                "name": "H2O",
                "short_description": "Lifecycle management workflow of H2O Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/H2O",
                "tags": [
                    "H2O",
                    "Service Automation",
                    "Artificial Intelligence"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "H2O",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "H2O",
                                "Artificial Intelligence",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/H2O.xml"
                    },
                    {
                        "name": "Finish_H2O",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "H2O",
                                "Artificial Intelligence",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Finish_H2O.xml"
                    },
                    {
                        "name": "Pause_H2O",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "H2O",
                                "Artificial Intelligence",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Pause_H2O.xml"
                    },
                    {
                        "name": "Resume_H2O",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "H2O",
                                "Artificial Intelligence",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Resume_H2O.xml"
                    }
                ]
            }
        },
        "Hbase": {
            "metadata": {
                "slug": "apache-hbase",
                "name": "Apache HBase",
                "short_description": "Lifecycle management workflows for Apache HBase",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Hbase",
                "tags": [
                    "Big Data",
                    "Service Automation",
                    "Analytics",
                    "HBase"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "HBase",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Service Automation",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Hbase.xml"
                    },
                    {
                        "name": "Finish_HBase",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Service Automation",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Finish_Hbase.xml"
                    }
                ]
            }
        },
        "HbaseOrchestration": {
            "metadata": {
                "slug": "apache-hbase-orchestration",
                "name": "Apache HBase Orchestration",
                "short_description": "Orchestrate Apache HBase jobs from ProActive",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/HbaseOrchestration",
                "tags": [
                    "Orchestration",
                    "Big Data",
                    "Building blocks",
                    "Analytics",
                    "HBase"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/HelloHBase.java"
                ]
            },
            "catalog": {
                "bucket": "data-big-data",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Hbase_Exec_Java_File",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Big Data",
                                "Building blocks",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Hbase_Exec_Java_File.xml"
                    },
                    {
                        "name": "Hbase_Load_Csv_From_HDFS",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Big Data",
                                "Building blocks",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Hbase_Load_Csv_From_HDFS.xml"
                    },
                    {
                        "name": "Run_HBase_Shell_Commands",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Big Data",
                                "Building blocks",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Run_HBase_Shell_Commands.xml"
                    },
                    {
                        "name": "Phoenix_Hbase_Sql_Queries",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Big Data",
                                "Building blocks",
                                "Analytics",
                                "HBase"
                            ]
                        },
                        "file": "resources/catalog/Phoenix_Hbase_Sql_Queries.xml"
                    }
                ]
            }
        },
        "HDFS": {
            "metadata": {
                "slug": "apache-hdfs",
                "name": "Apache HDFS",
                "short_description": "Lifecycle management workflows for HDFS",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/HDFS",
                "tags": [
                    "Big Data",
                    "HDFS",
                    "Service Automation",
                    "Analytics",
                    "Hadoop"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "HDFS",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Hadoop",
                                "Big Data",
                                "HDFS",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/HDFS.xml"
                    },
                    {
                        "name": "Finish_HDFS",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Hadoop",
                                "Big Data",
                                "HDFS",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Finish_HDFS.xml"
                    }
                ]
            }
        },
        "Hive": {
            "metadata": {
                "slug": "apache-hive",
                "name": "Apache Hive",
                "short_description": "Lifecycle management workflows for Apache Hive",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Hive",
                "tags": [
                    "Big Data",
                    "Hive",
                    "Service Automation",
                    "Analytics"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Hive",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Hive",
                                "Big Data",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Hive.xml"
                    },
                    {
                        "name": "Finish_Hive",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Hive",
                                "Big Data",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Finish_Hive.xml"
                    }
                ]
            }
        },
        "HiveOrchestration": {
            "metadata": {
                "slug": "apache-hive-orchestration",
                "name": "Apache Hive Orchestration",
                "short_description": "Orchestrate Apache Hive jobs from ProActive",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/HiveOrchestration",
                "tags": [
                    "Orchestration",
                    "Big Data",
                    "Beeline",
                    "Hive",
                    "Building blocks",
                    "Analytics"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/hive_sql.hql"
                ]
            },
            "catalog": {
                "bucket": "data-big-data",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Hive_Read_Hqlfile",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Hive",
                                "Big Data",
                                "Building blocks",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Hive_Read_Hqlfile.xml"
                    },
                    {
                        "name": "Connect_To_Hive_Cluster_With_Beeline",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Beeline",
                                "Hive",
                                "Big Data",
                                "Building blocks",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Connect_To_Hive_Cluster_With_Beeline.xml"
                    }
                ]
            }
        },
        "HPC": {
            "metadata": {
                "slug": "HPC workflow examples",
                "name": "HPC workflow examples",
                "short_description": "HPC workflow examples and associated resources",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/HPC",
                "tags": [
                    "Molecule",
                    "Visualization",
                    "DCV",
                    "Gromacs",
                    "VNC",
                    "VMD",
                    "AWS"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/molecule.gro",
                    "resources/dataspace/molecule_topology.tpr"
                ]
            },
            "catalog": {
                "bucket": "hpc-remote-visualization",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Gromacs_VMD_Molecule_Simulation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Molecule",
                                "Visualization",
                                "Gromacs",
                                "VMD"
                            ]
                        },
                        "file": "resources/catalog/Gromacs_VMD_Molecule_Simulation.xml"
                    },
                    {
                        "name": "AWS_Create_Nice_DCV_Node",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Molecule",
                                "Visualization",
                                "DCV",
                                "AWS"
                            ]
                        },
                        "file": "resources/catalog/AWS_Create_Nice_DCV_Node.xml"
                    },
                    {
                        "name": "AWS_Connect_Nice_DCV",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Molecule",
                                "Visualization",
                                "DCV",
                                "AWS"
                            ]
                        },
                        "file": "resources/catalog/AWS_Connect_Nice_DCV.xml"
                    },
                    {
                        "name": "VNC_Remote_Visualization",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Molecule",
                                "Visualization",
                                "VNC"
                            ]
                        },
                        "file": "resources/catalog/VNC_Remote_Visualization.xml"
                    }
                ]
            }
        },
        "Informatica": {
            "metadata": {
                "slug": "Informatica",
                "name": "Informatica",
                "short_description": "Informatica workflow examples",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Informatica",
                "tags": [
                    "Cloud",
                    "API",
                    "Data",
                    "Informatica",
                    "ETL",
                    "ELT",
                    "Application"
                ]
            },
            "catalog": {
                "bucket": "it-application-connectors",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Informatica_Cloud",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Cloud",
                                "API",
                                "Data",
                                "Informatica",
                                "ETL",
                                "ELT",
                                "Application"
                            ]
                        },
                        "file": "resources/catalog/Informatica.xml"
                    }
                ]
            }
        },
        "InfrastructureAsCode": {
            "metadata": {
                "slug": "infrastructure-as-code",
                "name": "Infrastructure as Code",
                "short_description": "Workflows using Infrastructure as Code tools",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/InfrastructureAsCode",
                "tags": [
                    "Infrastructure as Code",
                    "Terraform",
                    "IaC",
                    "AWS"
                ]
            },
            "catalog": {
                "bucket": "it-infrastructure-as-code",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Terraform_AWS_EC2_Instances",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Infrastructure as Code",
                                "Terraform",
                                "IaC",
                                "AWS"
                            ]
                        },
                        "file": "resources/catalog/Terraform_AWS_EC2_Instances.xml"
                    },
                    {
                        "name": "terraform_aws_ec2_instances.tf",
                        "metadata": {
                            "kind": "script/pre",
                            "commitMessage": "First commit",
                            "contentType": "application/octet-stream",
                            "projectName": "Terraform files"
                        },
                        "file": "resources/catalog/terraform_aws_ec2_instances.tf"
                    }
                ]
            }
        },
        "Infrastructures": {
            "metadata": {
                "slug": "infrastructures",
                "name": "Infrastructures",
                "short_description": "Infrastructures Definitions",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Infrastructures",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "rm-infrastructures",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "OneLocalNode",
                        "metadata": {
                            "kind": "InfrastructureNodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/OneLocalNode.json"
                    },
                    {
                        "name": "FourLocalNodes",
                        "metadata": {
                            "kind": "InfrastructureNodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/FourLocalNodes.json"
                    }
                ]
            }
        },
        "InMemoryWorkflows": {
            "metadata": {
                "slug": "in-memory-workflows",
                "name": "In Memory Workflows",
                "short_description": "In memory workflow examples",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/InMemoryWorkflows",
                "tags": [
                    "In Memory",
                    "Cluster",
                    "IPython",
                    "Classification"
                ]
            },
            "catalog": {
                "bucket": "ai-machine-learning-workflows",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Start_IPython_Cluster",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "In Memory",
                                "Cluster",
                                "IPython"
                            ]
                        },
                        "file": "resources/catalog/Start_IPython_Cluster.xml"
                    },
                    {
                        "name": "In_Memory_Iris_Flowers_Classification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Classification",
                                "In Memory"
                            ]
                        },
                        "file": "resources/catalog/In_Memory_Iris_Flowers_Classification.xml"
                    }
                ]
            }
        },
        "JobAnalysis": {
            "metadata": {
                "slug": "jobanalysis",
                "name": "Job Analysis",
                "short_description": "Analyze job distribution and efficiency in a simple Gantt Chart",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/JobAnalysis",
                "tags": [
                    "Gantt",
                    "Analysis",
                    "Monitoring"
                ]
            },
            "catalog": {
                "bucket": "basic-examples",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Gantt_Chart",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Gantt",
                                "Analysis",
                                "Monitoring"
                            ]
                        },
                        "file": "resources/catalog/Gantt_chart.xml"
                    }
                ]
            }
        },
        "JobExecTimeWorkflows": {
            "metadata": {
                "slug": "job-exec-time-workflows",
                "name": "JOB_EXEC_TIME workflows",
                "short_description": "Workflows that have the generic information JOB_EXEC_TIME ",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/JobExecTimeWorkflows",
                "tags": [
                    "Exec time",
                    "Samples",
                    "Execution time",
                    "JOB_EXEC_TIME"
                ]
            },
            "catalog": {
                "bucket": "calendars",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Variables_Propagation_1_Minute",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_1minute.xml"
                    },
                    {
                        "name": "Variables_Propagation_2_Minutes",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_2minutes.xml"
                    },
                    {
                        "name": "Variables_Propagation_10_Minutes",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_10minutes.xml"
                    },
                    {
                        "name": "Variables_Propagation_1_Hour",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_1hour.xml"
                    },
                    {
                        "name": "Variables_Propagation_2_Hours",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_2hours.xml"
                    },
                    {
                        "name": "Variables_Propagation_4_Hours",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_4hours.xml"
                    },
                    {
                        "name": "Variables_Propagation_24_Hours",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_24hours.xml"
                    },
                    {
                        "name": "Variables_Propagation_48_Hours",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Exec time",
                                "Samples",
                                "Execution time",
                                "JOB_EXEC_TIME"
                            ]
                        },
                        "file": "resources/catalog/variables_propagation_48hours.xml"
                    }
                ]
            }
        },
        "JupyterLab": {
            "metadata": {
                "slug": "jupyter-lab",
                "name": "Jupyter Lab",
                "short_description": "Lifecycle management workflow of JupyterLab service for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/JupyterLab",
                "tags": [
                    "Data Science",
                    "Artificial Intelligence",
                    "Cloud",
                    "Service Automation",
                    "JupyterLab",
                    "Python"
                ]
            },
            "catalog": {
                "userGroup": "public-objects",
                "bucket": "service-automation",
                "objects": [
                    {
                        "name": "JupyterLab",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Science",
                                "Artificial Intelligence",
                                "Cloud",
                                "Service Automation",
                                "JupyterLab",
                                "Python"
                            ]
                        },
                        "file": "resources/catalog/JupyterLab.xml"
                    },
                    {
                        "name": "Finish_JupyterLab",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Science",
                                "Artificial Intelligence",
                                "Cloud",
                                "Service Automation",
                                "JupyterLab",
                                "Python"
                            ]
                        },
                        "file": "resources/catalog/Finish_JupyterLab.xml"
                    },
                    {
                        "name": "Resume_JupyterLab",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Science",
                                "Artificial Intelligence",
                                "Cloud",
                                "Service Automation",
                                "JupyterLab",
                                "Python"
                            ]
                        },
                        "file": "resources/catalog/Resume_JupyterLab.xml"
                    },
                    {
                        "name": "Pause_JupyterLab",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Science",
                                "Artificial Intelligence",
                                "Cloud",
                                "Service Automation",
                                "JupyterLab",
                                "Python"
                            ]
                        },
                        "file": "resources/catalog/Pause_JupyterLab.xml"
                    }
                ]
            }
        },
        "Kafka": {
            "metadata": {
                "slug": "apache-kafka",
                "name": "Apache Kafka",
                "short_description": "Lifecycle management workflows for Apache Kafka",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Kafka",
                "tags": [
                    "Big Data",
                    "Kafka",
                    "Data Streaming",
                    "Service Automation",
                    "Artificial Intelligence"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Kafka",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "Big Data",
                                "Kafka",
                                "Data Streaming",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Kafka.xml"
                    },
                    {
                        "name": "Finish_Kafka",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "Big Data",
                                "Kafka",
                                "Data Streaming",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Finish_Kafka.xml"
                    }
                ]
            }
        },
        "Kibana": {
            "metadata": {
                "slug": "kibana",
                "name": "Kibana Service",
                "short_description": "Lifecycle management workflow of Kibana Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Kibana",
                "tags": [
                    "Service Automation",
                    "Kibana"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Kibana",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Kibana.xml"
                    },
                    {
                        "name": "Finish_Kibana",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Finish_Kibana.xml"
                    },
                    {
                        "name": "Pause_Kibana",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Pause_Kibana.xml"
                    },
                    {
                        "name": "Resume_Kibana",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Kibana",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Resume_Kibana.xml"
                    }
                ]
            }
        },
        "Knime": {
            "metadata": {
                "slug": "knime",
                "name": "Knime",
                "short_description": "Lifecycle management workflow of Knime for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Knime",
                "tags": [
                    "Visualization",
                    "Knime",
                    "Service Automation",
                    "Data Preparation",
                    "Artificial Intelligence"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Knime",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Visualization",
                                "Artificial Intelligence",
                                "Knime",
                                "Service Automation",
                                "Data Preparation"
                            ]
                        },
                        "file": "resources/catalog/Knime.xml"
                    },
                    {
                        "name": "Finish_Knime",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Visualization",
                                "Artificial Intelligence",
                                "Knime",
                                "Service Automation",
                                "Data Preparation"
                            ]
                        },
                        "file": "resources/catalog/Finish_Knime.xml"
                    }
                ]
            }
        },
        "LogAnalysis": {
            "metadata": {
                "slug": "loganalysis",
                "name": "Log Analysis",
                "short_description": "Log analysis and anomaly detection on logs with Docker",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/LogAnalysis",
                "tags": [
                    "Anomaly Detection",
                    "Intrusion Detection",
                    "Log Analysis",
                    "Samples",
                    "Big Data",
                    "HDFS",
                    "Machine Learning",
                    "Analytics"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "ai-machine-learning-workflows",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Anomaly_Detection_In_HDFS_Blocks",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Anomaly Detection",
                                "Intrusion Detection",
                                "Log Analysis",
                                "Samples",
                                "Big Data",
                                "HDFS",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Anomaly_Detection_In_HDFS_Blocks.xml"
                    },
                    {
                        "name": "Anomaly_Detection_In_HDFS_Nodes",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Anomaly Detection",
                                "Intrusion Detection",
                                "Log Analysis",
                                "Samples",
                                "Big Data",
                                "HDFS",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Anomaly_Detection_In_HDFS_Nodes.xml"
                    },
                    {
                        "name": "Anomaly_Detection_In_Apache_Logs",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Anomaly Detection",
                                "Intrusion Detection",
                                "Log Analysis",
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Anomaly_Detection_In_Apache_Logs.xml"
                    },
                    {
                        "name": "Unsupervised_Anomaly_Detection",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Anomaly Detection",
                                "Intrusion Detection",
                                "Log Analysis",
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Unsupervised_Anomaly_Detection.xml"
                    }
                ]
            }
        },
        "Logstash": {
            "metadata": {
                "slug": "logstash",
                "name": "Logstash Service",
                "short_description": "Lifecycle management workflow of Logstash Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Logstash",
                "tags": [
                    "Service Automation",
                    "Logstash"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Logstash",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Logstash",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Logstash.xml"
                    },
                    {
                        "name": "Finish_Logstash",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Logstash",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Finish_Logstash.xml"
                    },
                    {
                        "name": "Pause_Logstash",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Logstash",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Pause_Logstash.xml"
                    },
                    {
                        "name": "Resume_Logstash",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Logstash",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Resume_Logstash.xml"
                    }
                ]
            }
        },
        "MaaSDLPCA": {
            "metadata": {
                "slug": "maas_dl",
                "name": "maas_dl",
                "short_description": "Deep Learning Models deployment",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MaaSDLPCA",
                "tags": [
                    "Services",
                    "Deep learning models",
                    "Tensorflow Serving",
                    "MLOps",
                    "Model deployment",
                    "Model Management"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "MaaS_DL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Deep learning models",
                                "Tensorflow Serving",
                                "MLOps",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_DL.xml"
                    },
                    {
                        "name": "Finish_MaaS_DL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Deep learning models",
                                "Tensorflow Serving",
                                "MLOps",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Finish_MaaS_DL.xml"
                    },
                    {
                        "name": "Deploy_DL_Model",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Deep learning models",
                                "Tensorflow Serving",
                                "MLOps",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Deploy_DL_Model.xml"
                    },
                    {
                        "name": "Undeploy_DL_Model",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Deep learning models",
                                "Tensorflow Serving",
                                "MLOps",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Undeploy_DL_Model.xml"
                    },
                    {
                        "name": "Redeploy_DL_Model",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Deep learning models",
                                "Tensorflow Serving",
                                "MLOps",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Redeploy_DL_Model.xml"
                    }
                ]
            }
        },
        "MaaSMLPCA": {
            "metadata": {
                "slug": "maas_ml",
                "name": "maas_ml",
                "short_description": "Lifecycle management workflow of Model As a Service for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MaaSMLPCA",
                "tags": [
                    "Model",
                    "Service",
                    "Service Automation",
                    "ML"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/certificate_mas.pem",
                    "resources/dataspace/key_mas.pem"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "MaaS_ML",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Model",
                                "Service",
                                "Service Automation",
                                "ML"
                            ]
                        },
                        "file": "resources/catalog/MaaS_ML.xml"
                    },
                    {
                        "name": "Deploy_ML_Model",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Model",
                                "Service",
                                "Service Automation",
                                "ML"
                            ]
                        },
                        "file": "resources/catalog/Deploy_ML_Model.xml"
                    },
                    {
                        "name": "Update_MaaS_ML_Parameters",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Model",
                                "Service",
                                "Service Automation",
                                "ML"
                            ]
                        },
                        "file": "resources/catalog/Update_MaaS_ML_Parameters.xml"
                    },
                    {
                        "name": "Finish_MaaS_ML",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Model",
                                "Service",
                                "Service Automation",
                                "ML"
                            ]
                        },
                        "file": "resources/catalog/Finish_MaaS_ML.xml"
                    }
                ]
            }
        },
        "MachineLearning": {
            "metadata": {
                "slug": "machinelearning",
                "name": "Machine Learning",
                "short_description": "Machine learning tasks.",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MachineLearning",
                "tags": [
                    "Big Data",
                    "Machine Learning",
                    "Samples",
                    "Analytics"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/wine.csv",
                    "resources/dataspace/iris.csv",
                    "resources/dataspace/iris_ddd.csv",
                    "resources/dataspace/pima-indians-diabetes.csv",
                    "resources/dataspace/boston-houses-prices.csv",
                    "resources/dataspace/vehicle_silhouette.csv",
                    "resources/dataspace/data_type_identifier/data_type_identifier.h5",
                    "resources/dataspace/data_type_identifier/mappings.pickle",
                    "resources/dataspace/templates/index.html",
                    "resources/dataspace/static/AE-Logo.png"
                ]
            },
            "catalog": {
                "bucket": "ai-machine-learning",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Append_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Append_Data.xml"
                    },
                    {
                        "name": "Bayesian_Ridge_Regression",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Bayesian_Ridge_Regression.xml"
                    },
                    {
                        "name": "Download_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Download_Model.xml"
                    },
                    {
                        "name": "Drop_Columns",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Drop_Columns.xml"
                    },
                    {
                        "name": "Drop_NaNs",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Drop_NaNs.xml"
                    },
                    {
                        "name": "Encode_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Encode_Data.xml"
                    },
                    {
                        "name": "Export_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Export_Data.xml"
                    },
                    {
                        "name": "Fill_NaNs",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Fill_NaNs.xml"
                    },
                    {
                        "name": "Filter_Columns",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Filter_Columns.xml"
                    },
                    {
                        "name": "Gaussian_Naive_Bayes",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Gaussian_Naive_Bayes.xml"
                    },
                    {
                        "name": "Import_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Import_Data.xml"
                    },
                    {
                        "name": "Import_Data_And_Automate_Feature_Engineering",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Import_Data_And_Automate_Feature_Engineering.xml"
                    },
                    {
                        "name": "Import_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Import_Model.xml"
                    },
                    {
                        "name": "Linear_Regression",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Linear_Regression.xml"
                    },
                    {
                        "name": "Load_Boston_Dataset",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Load_Boston_Dataset.xml"
                    },
                    {
                        "name": "Load_Iris_Dataset",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Load_Iris_Dataset.xml"
                    },
                    {
                        "name": "Logistic_Regression",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Logistic_Regression.xml"
                    },
                    {
                        "name": "Merge_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Merge_Data.xml"
                    },
                    {
                        "name": "Predict_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Predict_Model.xml"
                    },
                    {
                        "name": "Preview_Results",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Preview_Results.xml"
                    },
                    {
                        "name": "Scale_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Scale_Data.xml"
                    },
                    {
                        "name": "Split_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Split_Data.xml"
                    },
                    {
                        "name": "Summarize_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Summarize_Data.xml"
                    },
                    {
                        "name": "Support_Vector_Machines",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Support_Vector_Machines.xml"
                    },
                    {
                        "name": "Support_Vector_Regression",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Support_Vector_Regression.xml"
                    },
                    {
                        "name": "Train_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Train_Model.xml"
                    },
                    {
                        "name": "Time_Series_Feature_Extraction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Time_Series_Feature_Extraction.xml"
                    },
                    {
                        "name": "Feature_Vector_Extractor",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Feature_Vector_Extractor.xml"
                    },
                    {
                        "name": "K_Means",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/K_Means.xml"
                    },
                    {
                        "name": "Isolation_Forest",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Isolation_Forest.xml"
                    },
                    {
                        "name": "Log_Parser",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Log_Parser.xml"
                    },
                    {
                        "name": "Mean_Shift",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Mean_Shift.xml"
                    },
                    {
                        "name": "One_Class_SVM",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/One_Class_SVM.xml"
                    },
                    {
                        "name": "Rename_Columns",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Rename_Columns.xml"
                    },
                    {
                        "name": "Query_Data",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Query_Data.xml"
                    },
                    {
                        "name": "TPOT_Classifier",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/TPOT_Classifier.xml"
                    },
                    {
                        "name": "AutoSklearn_Classifier",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/AutoSklearn_Classifier.xml"
                    },
                    {
                        "name": "AdaBoost",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/AdaBoost.xml"
                    },
                    {
                        "name": "CatBoost",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/CatBoost.xml"
                    },
                    {
                        "name": "Gradient_Boosting",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Gradient_Boosting.xml"
                    },
                    {
                        "name": "Random_Forest",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Random_Forest.xml"
                    },
                    {
                        "name": "XGBoost",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/XGBoost.xml"
                    },
                    {
                        "name": "AutoSklearn_Regressor",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/AutoSklearn_Regressor.xml"
                    },
                    {
                        "name": "Model_Explainability",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Model_Explainability.xml"
                    },
                    {
                        "name": "TPOT_Regressor",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/TPOT_Regressor.xml"
                    },
                    {
                        "name": "Append_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Append_Data_Script.py"
                    },
                    {
                        "name": "Autosklearn_Classifier_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Autosklearn_Classifier_Script.py"
                    },
                    {
                        "name": "Autosklearn_Regressor_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Autosklearn_Regressor_Script.py"
                    },
                    {
                        "name": "Bayesian_Ridge_Regression_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Bayesian_Ridge_Regression_Script.py"
                    },
                    {
                        "name": "Download_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Download_Model_Script.py"
                    },
                    {
                        "name": "Drop_Columns_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Drop_Columns_Script.py"
                    },
                    {
                        "name": "Drop_Nans_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Drop_Nans_Script.py"
                    },
                    {
                        "name": "Encode_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Encode_Data_Script.py"
                    },
                    {
                        "name": "Export_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Export_Data_Script.py"
                    },
                    {
                        "name": "Feature_Vector_Extractor_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Feature_Vector_Extractor_Script.py"
                    },
                    {
                        "name": "Fill_Nans_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Fill_Nans_Script.py"
                    },
                    {
                        "name": "Filter_Columns_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Filter_Columns_Script.py"
                    },
                    {
                        "name": "Gaussian_Naive_Bayes_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Gaussian_Naive_Bayes_Script.py"
                    },
                    {
                        "name": "Import_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Import_Data_Script.py"
                    },
                    {
                        "name": "Import_Data_And_Automate_Feature_Engineering_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Import_Data_And_Automate_Feature_Engineering_Script.py"
                    },
                    {
                        "name": "Import_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Import_Model_Script.py"
                    },
                    {
                        "name": "Isolation_Forest_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Isolation_Forest_Script.py"
                    },
                    {
                        "name": "K_means_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/K_means_Script.py"
                    },
                    {
                        "name": "Linear_Regression_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Linear_Regression_Script.py"
                    },
                    {
                        "name": "Load_Boston_Dataset_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Load_Boston_Dataset_Script.py"
                    },
                    {
                        "name": "Load_Iris_Dataset_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Load_Iris_Dataset_Script.py"
                    },
                    {
                        "name": "Load_Breast_Cancer_Dataset_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Load_Breast_Cancer_Dataset_Script.py"
                    },
                    {
                        "name": "Load_Californa_Housing_Dataset_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Load_Californa_Housing_Dataset_Script.py"
                    },
                    {
                        "name": "Log_Parser_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Log_Parser_Script.py"
                    },
                    {
                        "name": "Logistic_Regression_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Logistic_Regression_Script.py"
                    },
                    {
                        "name": "Mean_Shift_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Mean_Shift_Script.py"
                    },
                    {
                        "name": "Merge_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Merge_Data_Script.py"
                    },
                    {
                        "name": "One_Class_Svm_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/One_Class_Svm_Script.py"
                    },
                    {
                        "name": "Predict_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Predict_Model_Script.py"
                    },
                    {
                        "name": "Preview_Results_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Preview_Results_Script.py"
                    },
                    {
                        "name": "Query_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Query_Data_Script.py"
                    },
                    {
                        "name": "Rename_Columns_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Rename_Columns_Script.py"
                    },
                    {
                        "name": "Scale_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Scale_Data_Script.py"
                    },
                    {
                        "name": "Split_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Split_Data_Script.py"
                    },
                    {
                        "name": "Summarize_Data_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Summarize_Data_Script.py"
                    },
                    {
                        "name": "Support_Vector_Machine_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Support_Vector_Machine_Script.py"
                    },
                    {
                        "name": "Support_Vector_Regression_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Support_Vector_Regression_Script.py"
                    },
                    {
                        "name": "Tpot_Classifier_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Tpot_Classifier_Script.py"
                    },
                    {
                        "name": "Tpot_Regressor_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Tpot_Regressor_Script.py"
                    },
                    {
                        "name": "AdaBoost_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/AdaBoost_Script.py"
                    },
                    {
                        "name": "CatBoost_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/CatBoost_Script.py"
                    },
                    {
                        "name": "Gradient_Boosting_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Gradient_Boosting_Script.py"
                    },
                    {
                        "name": "Random_Forest_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Random_Forest_Script.py"
                    },
                    {
                        "name": "XGBoost_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/XGBoost_Script.py"
                    },
                    {
                        "name": "Train_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Train_Model_Script.py"
                    },
                    {
                        "name": "Time_Series_Feature_Extraction_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Time_Series_Feature_Extraction_Script.py"
                    },
                    {
                        "name": "Model_Explainability_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Model_Explainability_Script.py"
                    },
                    {
                        "name": "Utils_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Utils_Script.py"
                    }
                ]
            }
        },
        "MachineLearningH2O": {
            "metadata": {
                "slug": "machinelearningh2o",
                "name": "Machine Learning H2O",
                "short_description": "Machine Learning with H2O",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MachineLearningH2O",
                "tags": [
                    "H2O",
                    "Machine Learning",
                    "Samples",
                    "Artificial Intelligence"
                ]
            },
            "catalog": {
                "bucket": "ai-data-analysis-visualization",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "H2O_Service_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "H2O",
                                "Samples",
                                "Artificial Intelligence",
                                "Machine Learning"
                            ]
                        },
                        "file": "resources/catalog/H2O_Service_Actions.xml"
                    },
                    {
                        "name": "H2O_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "H2O",
                                "Samples",
                                "Artificial Intelligence",
                                "Machine Learning"
                            ]
                        },
                        "file": "resources/catalog/H2O_Service_Start.xml"
                    }
                ]
            }
        },
        "MachineLearningWorkflows": {
            "metadata": {
                "slug": "machinelearningworkflows",
                "name": "Machine Learning Workflows",
                "short_description": "Example of machine learning workflows.",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MachineLearningWorkflows",
                "tags": [
                    "K-Means",
                    "HyperParameterOptimization",
                    "Big Data",
                    "Regression",
                    "Tableau",
                    "Machine Learning",
                    "Auto Sklearn",
                    "Analytics",
                    "Input",
                    "Samples",
                    "Cross-validation",
                    "Model explainability",
                    "Classification",
                    "AutoML"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "ai-machine-learning-workflows",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Diabetics_Detection_Using_K_Means",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "K-Means",
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Diabetics_Detection_Using_K_Means.xml"
                    },
                    {
                        "name": "House_Price_Prediction_Using_Linear_Regression",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Regression",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/House_Price_Prediction_Using_Linear_Regression.xml"
                    },
                    {
                        "name": "Vehicle_Type_Using_Model_Explainability",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Model explainability",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Vehicle_Type_Using_Model_Explainability.xml"
                    },
                    {
                        "name": "Iris_Flowers_Classification_Using_Logistic_Regression",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Regression",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Iris_Flowers_Classification_Using_Logistic_Regression.xml"
                    },
                    {
                        "name": "Data_Fusion_And_Encoding",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Input",
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Data_Fusion_And_Encoding.xml"
                    },
                    {
                        "name": "Data_Anomaly_Detection",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Data_Anomaly_Detection.xml"
                    },
                    {
                        "name": "Parallel_Classification_Model_Training",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Classification",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Parallel_Classification_Model_Training.xml"
                    },
                    {
                        "name": "Parallel_Regression_Model_Training",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Regression",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Parallel_Regression_Model_Training.xml"
                    },
                    {
                        "name": "Breast_Cancer_Detection_Using_AutoSklearn_Classifier",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "HyperParameterOptimization",
                                "Samples",
                                "Big Data",
                                "AutoML",
                                "Machine Learning",
                                "Auto Sklearn",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Breast_Cancer_Detection_Using_AutoSklearn_Classifier.xml"
                    },
                    {
                        "name": "California_Housing_Prediction_Using_TPOT_Regressor",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Regression",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/California_Housing_Prediction_Using_TPOT_Regressor.xml"
                    },
                    {
                        "name": "Diabetics_Results_Visualization_Using_Tableau",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Tableau",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Diabetics_Results_Visualization_Using_Tableau.xml"
                    },
                    {
                        "name": "Nested_Cross_Validation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Cross-validation",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Nested_Cross_Validation.xml"
                    },
                    {
                        "name": "Train_Classification_Model_On_GPU",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Classification",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Train_Classification_Model_On_GPU.xml"
                    },
                    {
                        "name": "Train_Regression_Model_On_GPU",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Regression",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Train_Regression_Model_On_GPU.xml"
                    },
                    {
                        "name": "Train_Multiple_Classification_Models_On_GPU",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Classification",
                                "Big Data",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Train_Multiple_Classification_Models_On_GPU.xml"
                    },
                    {
                        "name": "Train_Multiple_Regression_Models_On_GPU",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "Big Data",
                                "Regression",
                                "Machine Learning",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Train_Multiple_Regression_Models_On_GPU.xml"
                    }
                ]
            }
        },
        "Machining": {
            "metadata": {
                "slug": "machining",
                "name": "Machining",
                "short_description": "Machining workflows.",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Machining",
                "tags": [
                    "Machining process",
                    "Optimization"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/ini4j-0.5.1.jar"
                ]
            },
            "catalog": {
                "bucket": "hpc-machining",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Demo_DIAD",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Machining process",
                                "Optimization"
                            ]
                        },
                        "file": "resources/catalog/Demo_DIAD.xml"
                    },
                    {
                        "name": "Inputs_Optimization_V1",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Machining process",
                                "Optimization"
                            ]
                        },
                        "file": "resources/catalog/Inputs_optimization_v1.xml"
                    },
                    {
                        "name": "Inputs_Optimization_V2",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Machining process",
                                "Optimization"
                            ]
                        },
                        "file": "resources/catalog/Inputs_optimization_v2.xml"
                    },
                    {
                        "name": "Machining_Process",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Machining process",
                                "Optimization"
                            ]
                        },
                        "file": "resources/catalog/Machining_process.xml"
                    },
                    {
                        "name": "Part_Program_Enhancer",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Machining process",
                                "Optimization"
                            ]
                        },
                        "file": "resources/catalog/PartProgramEnhancer.xml"
                    }
                ]
            }
        },
        "MLOpsDashboard": {
            "metadata": {
                "slug": "mlops_dashboard",
                "name": "mlops_dashboard",
                "short_description": "MLOps Dashboard for AI Models Management, Deployment, and Monitoring",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MLOpsDashboard",
                "tags": [
                    "MLOps",
                    "Model Deployment",
                    "Triton",
                    "Dashboard",
                    "Service",
                    "Model Monitoring",
                    "Service Automation",
                    "Model Management"
                ]
            },
            "catalog": {
                "bucket": "ai-mlops-dashboard",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "MLOps_Dashboard",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Dashboard.xml"
                    },
                    {
                        "name": "Finish_MLOps_Dashboard",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Finish_MLOps_Dashboard.xml"
                    }
                ]
            }
        },
        "MLOpsModelServer": {
            "metadata": {
                "slug": "mlops_model_server",
                "name": "mlops_model_server",
                "short_description": "Lifecycle management workflow of Model As a Service for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MLOpsModelServer",
                "tags": [
                    "MLOps",
                    "Model Deployment",
                    "Triton",
                    "Dashboard",
                    "Service",
                    "Model Monitoring",
                    "Service Automation",
                    "Model Management"
                ]
            },
            "catalog": {
                "bucket": "ai-mlops-dashboard",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "MLOps_Model_Server",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Model_Server.xml"
                    },
                    {
                        "name": "Finish_MLOps_Model_Server",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Finish_MLOps_Model_Server.xml"
                    },
                    {
                        "name": "MLOps_Model_Server_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Model_Server_Service_Start.xml"
                    },
                    {
                        "name": "MLOps_Model_Server_Service_Stop",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Model_Server_Service_Stop.xml"
                    },
                    {
                        "name": "MLOps_Model_Server_Service_Manager",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Model_Server_Service_Manager.xml"
                    },
                    {
                        "name": "MLOps_Model_Server_Inference_Test",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Model_Server_Inference_Test.xml"
                    },
                    {
                        "name": "MLOps_Model_Server_Inference_Test_Continuous",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Model_Server_Inference_Test_Continuous.xml"
                    },
                    {
                        "name": "MLOps_Model_Server_Inference_Test_Periodic",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MLOps",
                                "Model Deployment",
                                "Triton",
                                "Dashboard",
                                "Service",
                                "Model Monitoring",
                                "Service Automation",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MLOps_Model_Server_Inference_Test_Periodic.xml"
                    }
                ]
            }
        },
        "ModelAsService": {
            "metadata": {
                "slug": "model services",
                "name": "model as a service",
                "short_description": "Machine Learning models deployment on Azure",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/ModelAsService",
                "tags": [
                    "Services",
                    "Azure",
                    "Model deployment",
                    "Model Management",
                    "Samples"
                ]
            },
            "catalog": {
                "bucket": "ai-model-as-a-service",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Azure_Deploy_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Azure_Deploy_Model.xml"
                    },
                    {
                        "name": "Azure_Call_Deployed_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Azure_Call_Deployed_Service.xml"
                    },
                    {
                        "name": "Azure_Update_Deployed_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Azure_Update_Deployed_Service.xml"
                    },
                    {
                        "name": "Azure_Delete_Deployed_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Azure_Delete_Deployed_Service.xml"
                    },
                    {
                        "name": "Azure_Model_Deployment_Example",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Samples",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Azure_Model_Deployment_Example.xml"
                    },
                    {
                        "name": "Azure_Train_Deploy_Call_Diabetics_Detection_Service",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Samples",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Azure_Train_Deploy_Call_Diabetics_Detection_Service.xml"
                    },
                    {
                        "name": "MaaS_ML_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_ML_Service_Start.xml"
                    },
                    {
                        "name": "MaaS_ML_Deploy_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_ML_Deploy_Model.xml"
                    },
                    {
                        "name": "MaaS_ML_Call_Prediction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_ML_Call_Prediction.xml"
                    },
                    {
                        "name": "MaaS_ML_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_ML_Actions.xml"
                    },
                    {
                        "name": "IRIS_Deploy_Predict_Flower_Classifier_Model_Interactive",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Samples",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/IRIS_Deploy_Predict_Flower_Classifier_Model_Interactive.xml"
                    },
                    {
                        "name": "Diabetics_Deploy_Predict_Classifier_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Samples",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/Diabetics_Deploy_Predict_Classifier_Model.xml"
                    },
                    {
                        "name": "IRIS_Deploy_Flower_Classifier_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Samples",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/IRIS_Deploy_Flower_Classifier_Model.xml"
                    },
                    {
                        "name": "MaaS_DL_Service_Start",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_DL_Service_Start.xml"
                    },
                    {
                        "name": "MaaS_DL_Deploy_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_DL_Deploy_Model.xml"
                    },
                    {
                        "name": "MaaS_DL_Undeploy_Model",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_DL_Undeploy_Model.xml"
                    },
                    {
                        "name": "MaaS_DL_Call_Prediction",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_DL_Call_Prediction.xml"
                    },
                    {
                        "name": "MaaS_DL_Actions",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MaaS_DL_Actions.xml"
                    },
                    {
                        "name": "MNIST_Model_Training_And_Deployment",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Services",
                                "Azure",
                                "Model deployment",
                                "Samples",
                                "Model Management"
                            ]
                        },
                        "file": "resources/catalog/MNIST_Model_Training_And_Deployment.xml"
                    },
                    {
                        "name": "Azure_Call_Deployed_Service_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Azure Scripts"
                        },
                        "file": "resources/catalog/Azure_Call_Deployed_Service_Script.py"
                    },
                    {
                        "name": "Azure_Deploy_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Azure Scripts"
                        },
                        "file": "resources/catalog/Azure_Deploy_Model_Script.py"
                    },
                    {
                        "name": "Azure_Update_Deployed_Service_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Azure Scripts"
                        },
                        "file": "resources/catalog/Azure_Update_Deployed_Service_Script.py"
                    },
                    {
                        "name": "Azure_Delete_Deployed_Service_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Azure Scripts"
                        },
                        "file": "resources/catalog/Azure_Delete_Deployed_Service_Script.py"
                    },
                    {
                        "name": "MaaS_ML_Deploy_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_ML_Deploy_Model_Script.py"
                    },
                    {
                        "name": "MaaS_ML_Call_Prediction_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_ML_Call_Prediction_Script.py"
                    },
                    {
                        "name": "MaaS_Start_Post_Script",
                        "metadata": {
                            "kind": "Script/post",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_Start_Post_Script.py"
                    },
                    {
                        "name": "MaaS_Pre_Script",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_Pre_Script.py"
                    },
                    {
                        "name": "MaaS_Post_Script",
                        "metadata": {
                            "kind": "Script/post",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_Post_Script.groovy"
                    },
                    {
                        "name": "MaaS_DL_Deploy_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_DL_Deploy_Model_Script.py"
                    },
                    {
                        "name": "MaaS_DL_Undeploy_Model_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_DL_Undeploy_Model_Script.py"
                    },
                    {
                        "name": "MaaS_DL_Call_Prediction_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Scripts"
                        },
                        "file": "resources/catalog/MaaS_DL_Call_Prediction_Script.py"
                    },
                    {
                        "name": "ml_service",
                        "metadata": {
                            "kind": "Text",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Resources"
                        },
                        "file": "resources/catalog/ml_service.py"
                    },
                    {
                        "name": "ml_service-api",
                        "metadata": {
                            "kind": "Text",
                            "commitMessage": "First commit",
                            "contentType": "application/octet-stream",
                            "projectName": "MaaS Resources"
                        },
                        "file": "resources/catalog/ml_service-api.yaml"
                    },
                    {
                        "name": "dl_service",
                        "metadata": {
                            "kind": "Text",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "MaaS Resources"
                        },
                        "file": "resources/catalog/dl_service.py"
                    },
                    {
                        "name": "dl_service-api",
                        "metadata": {
                            "kind": "Text",
                            "commitMessage": "First commit",
                            "contentType": "application/octet-stream",
                            "projectName": "MaaS Resources"
                        },
                        "file": "resources/catalog/dl_service-api.yaml"
                    }
                ]
            }
        },
        "MongoDB": {
            "metadata": {
                "slug": "mongodb",
                "name": "MongoDB",
                "short_description": "Lifecycle management workflow of MongoDB Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MongoDB",
                "tags": [
                    "MongoDB",
                    "NoSQL",
                    "Service Automation",
                    "Data Base"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "MongoDB",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MongoDB",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/MongoDB.xml"
                    },
                    {
                        "name": "Finish_MongoDB",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "NoSQL",
                                "MongoDB",
                                "Service Automation",
                                "Data Base"
                            ]
                        },
                        "file": "resources/catalog/Finish_MongoDB.xml"
                    }
                ]
            }
        },
        "MySQL": {
            "metadata": {
                "slug": "mysql",
                "name": "MySQL",
                "short_description": "Lifecycle management workflow of MySQL Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/MySQL",
                "tags": [
                    "Service Automation",
                    "Data Base",
                    "MySQL",
                    "SQL"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "MySQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MySQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/MySQL.xml"
                    },
                    {
                        "name": "Finish_MySQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MySQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Finish_MySQL.xml"
                    },
                    {
                        "name": "Resume_MySQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MySQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Resume_MySQL.xml"
                    },
                    {
                        "name": "Pause_MySQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "MySQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Pause_MySQL.xml"
                    }
                ]
            }
        },
        "NodeSources": {
            "metadata": {
                "slug": "nodesources",
                "name": "Node Sources",
                "short_description": "Node Sources Definitions",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/NodeSources",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "rm-node-sources",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "AwsEC2Cloud",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/AwsEC2Cloud.json"
                    },
                    {
                        "name": "AwsEC2CloudElastic",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/AwsEC2CloudElastic.json"
                    },
                    {
                        "name": "AzureCloud",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/AzureCloud.json"
                    },
                    {
                        "name": "K8SClusterElastic",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/K8SClusterElastic.json"
                    },
                    {
                        "name": "AzureScaleSetCloudElastic",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/AzureScaleSetCloudElastic.json"
                    },
                    {
                        "name": "GoogleComputeEngine",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/GoogleComputeEngine.json"
                    },
                    {
                        "name": "GoogleComputeEngineElastic",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/GoogleComputeEngineElastic.json"
                    },
                    {
                        "name": "IbmSoftlayer",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/IbmSoftlayer.json"
                    },
                    {
                        "name": "LocalClusterElastic",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/LocalClusterElastic.json"
                    },
                    {
                        "name": "LocalCluster",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/LocalCluster.json"
                    },
                    {
                        "name": "OVH",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/OVH.json"
                    },
                    {
                        "name": "OVHElastic",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/OVHElastic.json"
                    },
                    {
                        "name": "OpenstackRocky",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/Openstack_Rocky.json"
                    },
                    {
                        "name": "OpenstackLiberty",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/Openstack_Liberty.json"
                    },
                    {
                        "name": "VMware",
                        "metadata": {
                            "kind": "NodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/VMware.json"
                    }
                ]
            }
        },
        "OpenRefine": {
            "metadata": {
                "slug": "openrefine",
                "name": "OpenRefine",
                "short_description": "Lifecycle management workflow of OpenRefine for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/OpenRefine",
                "tags": [
                    "Service Automation",
                    "Data Preparation",
                    "OpenRefine",
                    "Artificial Intelligence",
                    "Cloud"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "OpenRefine",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "Cloud",
                                "Service Automation",
                                "Data Preparation",
                                "OpenRefine"
                            ]
                        },
                        "file": "resources/catalog/OpenRefine.xml"
                    },
                    {
                        "name": "Finish_OpenRefine",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "Cloud",
                                "Service Automation",
                                "Data Preparation",
                                "OpenRefine"
                            ]
                        },
                        "file": "resources/catalog/Finish_OpenRefine.xml"
                    }
                ]
            }
        },
        "Oracle": {
            "metadata": {
                "slug": "oracle",
                "name": "Oracle",
                "short_description": "Lifecycle management workflow of Oracle Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Oracle",
                "tags": [
                    "Service Automation",
                    "Oracle",
                    "Data Base",
                    "SQL"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Oracle",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Service Automation",
                                "Oracle",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Oracle.xml"
                    },
                    {
                        "name": "Finish_Oracle",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Service Automation",
                                "Oracle",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Finish_Oracle.xml"
                    },
                    {
                        "name": "Resume_Oracle",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Service Automation",
                                "Oracle",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Resume_Oracle.xml"
                    },
                    {
                        "name": "Pause_Oracle",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Service Automation",
                                "Oracle",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Pause_Oracle.xml"
                    }
                ]
            }
        },
        "PcaScripts": {
            "metadata": {
                "slug": "scripts",
                "name": "Scripts",
                "short_description": "PSA service scripts",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/PcaScripts",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Check_Instance_Status",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Check_Instance_Status.groovy"
                    },
                    {
                        "name": "Check_Instance_Status_Singularity",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Check_Instance_Status_Singularity.groovy"
                    },
                    {
                        "name": "Post_Trigger_Action",
                        "metadata": {
                            "kind": "Script/post",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Post_Trigger_Action.groovy"
                    },
                    {
                        "name": "Pre_Trigger_Action",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Pre_Trigger_Action.groovy"
                    },
                    {
                        "name": "Service_Action",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Service_Action.groovy"
                    },
                    {
                        "name": "Service_Start",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Service_Start.groovy"
                    },
                    {
                        "name": "Post_Start_Service",
                        "metadata": {
                            "kind": "Script/post",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Post_Start_Service.groovy"
                    },
                    {
                        "name": "Pre_Start_Service",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Pre_Start_Service.groovy"
                    },
                    {
                        "name": "Find_and_set_Instance_Id",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Find_and_set_Instance_Id.groovy"
                    },
                    {
                        "name": "Clean_Start_Service",
                        "metadata": {
                            "kind": "Script/clean",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Clean_Start_Service.groovy"
                    },
                    {
                        "name": "Clean_Trigger_Action",
                        "metadata": {
                            "kind": "Script/clean",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Clean_Trigger_Action.groovy"
                    },
                    {
                        "name": "Pause_Action",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-sh",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Pause_Action.bash"
                    },
                    {
                        "name": "Pause_Action_Singularity",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-sh",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Pause_Action_Singularity.bash"
                    },
                    {
                        "name": "Resume_Action",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-sh",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Resume_Action.bash"
                    },
                    {
                        "name": "Resume_Action_Singularity",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-sh",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Resume_Action_Singularity.bash"
                    },
                    {
                        "name": "Finish_Action",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-sh",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Finish_Action.bash"
                    },
                    {
                        "name": "Finish_Action_Singularity",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-sh",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Finish_Action_Singularity.bash"
                    },
                    {
                        "name": "Fetch_Logs",
                        "metadata": {
                            "kind": "Script/flow",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Fetch_Logs.groovy"
                    },
                    {
                        "name": "Propagate_variables_to_current_service",
                        "metadata": {
                            "kind": "Script/flow",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Propagate_variables_to_current_service.groovy"
                    },
                    {
                        "name": "Retrieve_variables_from_service_instance_id",
                        "metadata": {
                            "kind": "Script/flow",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Retrieve_variables_from_service_instance_id.groovy"
                    },
                    {
                        "name": "Add_deployments_and_update_service",
                        "metadata": {
                            "kind": "Script/flow",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Add_deployments_and_update_service.groovy"
                    },
                    {
                        "name": "Update_service_and_remove_tokens",
                        "metadata": {
                            "kind": "Script/flow",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Update_service_and_remove_tokens.groovy"
                    },
                    {
                        "name": "Loop_over_service_instance_status",
                        "metadata": {
                            "kind": "Script/flow",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Loop_over_service_instance_status.groovy"
                    },
                    {
                        "name": "Set_service_FINISHED_if_all_clean_OK",
                        "metadata": {
                            "kind": "Script/flow",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "9. Scripts"
                        },
                        "file": "resources/catalog/Set_service_FINISHED_if_all_clean_OK.groovy"
                    }
                ]
            }
        },
        "PCWRules": {
            "metadata": {
                "slug": "cloudwatch",
                "name": "Cloud Watch",
                "short_description": "Samples for event driven automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/PCWRules",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "event-rules",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "CPU_Core_Usage",
                        "metadata": {
                            "kind": "Rule/cpu",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/CPU_Core_Usage.xml"
                    },
                    {
                        "name": "CPU_Usage_Average_Time_Window",
                        "metadata": {
                            "kind": "Rule/cpu",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/CPU_Usage_Average_Time_Window.xml"
                    },
                    {
                        "name": "CPU_Usage_Combined",
                        "metadata": {
                            "kind": "Rule/cpu",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/CPU_Usage_Combined.xml"
                    },
                    {
                        "name": "CPU_User_Process_Usage_Percent",
                        "metadata": {
                            "kind": "Rule/cpu",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/CPU_User_Process_Usage_Percent.xml"
                    },
                    {
                        "name": "File_System_Disk_Write_Speed",
                        "metadata": {
                            "kind": "Rule/file-system",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/File_System_Disk_Write_Speed.xml"
                    },
                    {
                        "name": "File_System_Free_Disk_Space",
                        "metadata": {
                            "kind": "Rule/file-system",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/File_System_Free_Disk_Space.xml"
                    },
                    {
                        "name": "File_System_Used_Disk_Space_Percent",
                        "metadata": {
                            "kind": "Rule/file-system",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/File_System_Used_Disk_Space_Percent.xml"
                    },
                    {
                        "name": "Host_Is_Down_Cloud_Automation_Action",
                        "metadata": {
                            "kind": "Rule/host",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/Host_Is_Down_Cloud_Automation_Action.xml"
                    },
                    {
                        "name": "Host_Is_Up",
                        "metadata": {
                            "kind": "Rule/host",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/Host_Is_Up.xml"
                    },
                    {
                        "name": "Memory_Free",
                        "metadata": {
                            "kind": "Rule/memory",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/Memory_Free.xml"
                    },
                    {
                        "name": "Memory_Usage_Percent",
                        "metadata": {
                            "kind": "Rule/memory",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/Memory_Usage_Percent.xml"
                    },
                    {
                        "name": "Network_Interface_Receive_Bytes",
                        "metadata": {
                            "kind": "Rule",
                            "commitMessage": "First commit",
                            "contentType": "application/xml"
                        },
                        "file": "resources/catalog/Network_Interface_Receive_Bytes.xml"
                    }
                ]
            }
        },
        "Policies": {
            "metadata": {
                "slug": "policies",
                "name": "Policies",
                "short_description": "Node Sources Policies",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Policies",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "rm-policies",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "TenSecondsRestartDownNodes",
                        "metadata": {
                            "kind": "PolicyNodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/TenSecondsRestartDownNodes.json"
                    },
                    {
                        "name": "FiveMinutesRestartDownNodes",
                        "metadata": {
                            "kind": "PolicyNodeSource",
                            "commitMessage": "First commit",
                            "contentType": "application/json"
                        },
                        "file": "resources/catalog/FiveMinutesRestartDownNodes.json"
                    }
                ]
            }
        },
        "PostgreSQL": {
            "metadata": {
                "slug": "postgresql",
                "name": "PostgreSQL",
                "short_description": "Lifecycle management workflow of PostgreSQL Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/PostgreSQL",
                "tags": [
                    "Service Automation",
                    "Data Base",
                    "PostgreSQL",
                    "SQL"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "PostgreSQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "PostgreSQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/PostgreSQL.xml"
                    },
                    {
                        "name": "Finish_PostgreSQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "PostgreSQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Finish_PostgreSQL.xml"
                    },
                    {
                        "name": "Pause_PostgreSQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "PostgreSQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Pause_PostgreSQL.xml"
                    },
                    {
                        "name": "Resume_PostgreSQL",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "PostgreSQL",
                                "Service Automation",
                                "Data Base",
                                "SQL"
                            ]
                        },
                        "file": "resources/catalog/Resume_PostgreSQL.xml"
                    }
                ]
            }
        },
        "Rest": {
            "metadata": {
                "slug": "rest",
                "name": "Rest",
                "short_description": "Template Tasks to perform REST api calls.",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Rest",
                "tags": [
                    "REST",
                    "API",
                    "Web Service"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/rest-assured-fat-3.3.0.jar"
                ]
            },
            "catalog": {
                "bucket": "communication-rest",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Get",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Get.xml"
                    },
                    {
                        "name": "Body_Post",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Body_Post.xml"
                    },
                    {
                        "name": "Body_Put",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Body_Put.xml"
                    },
                    {
                        "name": "Body_Patch",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Body_Patch.xml"
                    },
                    {
                        "name": "Body_Delete",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Body_Delete.xml"
                    },
                    {
                        "name": "Form_Post",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Form_Post.xml"
                    },
                    {
                        "name": "Form_Put",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "REST",
                                "API",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/Form_Put.xml"
                    }
                ]
            }
        },
        "SatelliteImagery": {
            "metadata": {
                "slug": "Satellite imagery workflows",
                "name": "Satellite imagery workflows",
                "short_description": "Satellite imagery workflows",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/SatelliteImagery",
                "tags": [
                    "imagery",
                    "satellite"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/geojson_example.json"
                ]
            },
            "catalog": {
                "bucket": "hpc-satellite-imagery",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Fetch_Satellite_Images_From_PEPS",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "imagery",
                                "satellite"
                            ]
                        },
                        "file": "resources/catalog/Fetch_Satellite_Images_From_PEPS.xml"
                    },
                    {
                        "name": "Fetch_Satellite_Images_From_Copernicus",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "imagery",
                                "satellite"
                            ]
                        },
                        "file": "resources/catalog/Fetch_Satellite_Images_From_Copernicus.xml"
                    },
                    {
                        "name": "Fetch_Images_From_Satellite_Platforms",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "imagery",
                                "satellite"
                            ]
                        },
                        "file": "resources/catalog/Fetch_Images_From_Satellite_Platforms.xml"
                    },
                    {
                        "name": "expected_search_footprints_s1",
                        "metadata": {
                            "kind": "Text",
                            "commitMessage": "First commit",
                            "contentType": "application/json",
                            "projectName": "Satellite Imagery"
                        },
                        "file": "resources/catalog/expected_search_footprints_s1.geojson"
                    }
                ]
            }
        },
        "Scripts": {
            "metadata": {
                "slug": "scripts",
                "name": "Scripts",
                "short_description": "Any scripts",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Scripts",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "scripts",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "kill_other_replicated_tasks",
                        "metadata": {
                            "kind": "Script/post",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy"
                        },
                        "file": "resources/catalog/kill_other_replicated_tasks.groovy"
                    },
                    {
                        "name": "update_variables_from_file",
                        "metadata": {
                            "kind": "Script/post",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy"
                        },
                        "file": "resources/catalog/update_variables_from_file.groovy"
                    },
                    {
                        "name": "remote_visualization",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy"
                        },
                        "file": "resources/catalog/remote_visualization.groovy"
                    },
                    {
                        "name": "propagate_error",
                        "metadata": {
                            "kind": "Script/pre",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy"
                        },
                        "file": "resources/catalog/propagate_error.groovy"
                    },
                    {
                        "name": "fork_env_ai",
                        "metadata": {
                            "kind": "Script/environment",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Fork Environment Scripts"
                        },
                        "file": "resources/catalog/fork_env_ai.groovy"
                    },
                    {
                        "name": "fork_env_docker_vars",
                        "metadata": {
                            "kind": "Script/environment",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Fork Environment Scripts"
                        },
                        "file": "resources/catalog/fork_env_docker_vars.groovy"
                    },
                    {
                        "name": "fork_env_docker_pycuda",
                        "metadata": {
                            "kind": "Script/environment",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Fork Environment Scripts"
                        },
                        "file": "resources/catalog/fork_env_docker_pycuda.groovy"
                    },
                    {
                        "name": "fork_env_docker_rbase_datadir",
                        "metadata": {
                            "kind": "Script/environment",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Fork Environment Scripts"
                        },
                        "file": "resources/catalog/fork_env_docker_rbase_datadir.groovy"
                    },
                    {
                        "name": "fork_env_horovod",
                        "metadata": {
                            "kind": "Script/environment",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Fork Environment Scripts"
                        },
                        "file": "resources/catalog/fork_env_horovod.groovy"
                    }
                ]
            }
        },
        "SelectionScripts": {
            "metadata": {
                "slug": "scripts",
                "name": "Scripts",
                "short_description": "Any scripts",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/SelectionScripts",
                "tags": [
                    
                ]
            },
            "catalog": {
                "bucket": "scripts",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "is_posix",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/is_posix.groovy"
                    },
                    {
                        "name": "is_linux",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/is_linux.groovy"
                    },
                    {
                        "name": "is_mac",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/is_mac.groovy"
                    },
                    {
                        "name": "is_windows",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/is_windows.groovy"
                    },
                    {
                        "name": "check_property",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_property.groovy"
                    },
                    {
                        "name": "check_property_regexp",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_property_regexp.groovy"
                    },
                    {
                        "name": "check_host_name",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_host_name.groovy"
                    },
                    {
                        "name": "check_host_name_regexp",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_host_name_regexp.groovy"
                    },
                    {
                        "name": "check_host_name_optional",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_host_name_optional.groovy"
                    },
                    {
                        "name": "check_ip",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_ip.groovy"
                    },
                    {
                        "name": "check_node_source_regexp",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_node_source_regexp.groovy"
                    },
                    {
                        "name": "check_total_ram",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_total_ram.groovy"
                    },
                    {
                        "name": "check_free_ram",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_free_ram.groovy"
                    },
                    {
                        "name": "check_file_exists",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_file_exists.groovy"
                    },
                    {
                        "name": "check_executable_in_path",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_executable_in_path.groovy"
                    },
                    {
                        "name": "check_available_space_in_dir",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_available_space_in_dir.groovy"
                    },
                    {
                        "name": "check_available_space_in_tmp_dir",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_available_space_in_tmp_dir.groovy"
                    },
                    {
                        "name": "check_node_name",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_node_name.groovy"
                    },
                    {
                        "name": "check_node_name_regexp",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_node_name_regexp.groovy"
                    },
                    {
                        "name": "check_node_name_not_empty",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_node_name_not_empty.groovy"
                    },
                    {
                        "name": "check_env",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_env.groovy"
                    },
                    {
                        "name": "check_node_source",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_node_source.groovy"
                    },
                    {
                        "name": "check_env_regexp",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_env_regexp.groovy"
                    },
                    {
                        "name": "check_node_source_name",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_node_source_name.groovy"
                    },
                    {
                        "name": "check_gpu_exists",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-python",
                            "projectName": "Selection Scripts"
                        },
                        "file": "resources/catalog/check_gpu_exists.py"
                    }
                ]
            }
        },
        "Signal": {
            "metadata": {
                "slug": "signal",
                "name": "signal",
                "short_description": "ProActive task templates for signal management",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Signal",
                "tags": [
                    "template",
                    "action",
                    "communication",
                    "signal"
                ]
            },
            "catalog": {
                "bucket": "control-signal",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Send_Ready_For_Signal",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "template",
                                "action",
                                "communication",
                                "signal"
                            ]
                        },
                        "file": "resources/catalog/Send_Ready_For_Signal.xml"
                    },
                    {
                        "name": "Check_Signal_Is_Received",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "template",
                                "action",
                                "communication",
                                "signal"
                            ]
                        },
                        "file": "resources/catalog/Check_Signal_Is_Received.xml"
                    },
                    {
                        "name": "Send_Signals",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "template",
                                "action",
                                "communication",
                                "signal"
                            ]
                        },
                        "file": "resources/catalog/Send_Signals.xml"
                    },
                    {
                        "name": "Wait_For_All_Signals",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "template",
                                "action",
                                "communication",
                                "signal"
                            ]
                        },
                        "file": "resources/catalog/Wait_For_All_Signals.xml"
                    },
                    {
                        "name": "Wait_For_Any_Signal",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "template",
                                "action",
                                "communication",
                                "signal"
                            ]
                        },
                        "file": "resources/catalog/Wait_For_Any_Signal.xml"
                    },
                    {
                        "name": "Get_Job_Signals",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "template",
                                "action",
                                "communication",
                                "signal"
                            ]
                        },
                        "file": "resources/catalog/Get_Job_Signals.xml"
                    },
                    {
                        "name": "Remove_Signals",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "template",
                                "action",
                                "communication",
                                "signal"
                            ]
                        },
                        "file": "resources/catalog/Remove_Signals.xml"
                    },
                    {
                        "name": "send_ready_for_signal",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/send_ready_for_signal.groovy"
                    },
                    {
                        "name": "check_signal_is_received",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/check_signal_is_received.groovy"
                    },
                    {
                        "name": "send_signal",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/send_signal.groovy"
                    },
                    {
                        "name": "send_many_signals",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/send_many_signals.groovy"
                    },
                    {
                        "name": "wait_for_signal",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/wait_for_signal.groovy"
                    },
                    {
                        "name": "wait_for_all_signals",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/wait_for_all_signals.groovy"
                    },
                    {
                        "name": "wait_for_any_signal",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/wait_for_any_signal.groovy"
                    },
                    {
                        "name": "get_job_signals",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/get_job_signals.groovy"
                    },
                    {
                        "name": "remove_signal",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/remove_signal.groovy"
                    },
                    {
                        "name": "remove_many_signals",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/remove_many_signals.groovy"
                    },
                    {
                        "name": "check_and_remove_many_signals",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Signal Scripts"
                        },
                        "file": "resources/catalog/check_and_remove_many_signals.groovy"
                    }
                ]
            }
        },
        "SOAP": {
            "metadata": {
                "slug": "communication soap",
                "name": "communication soap",
                "short_description": "Communication Soap",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/SOAP",
                "tags": [
                    "API",
                    "SOAP",
                    "Web Service"
                ]
            },
            "catalog": {
                "bucket": "communication-soap",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "SOAP_Calculator",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "1. SOAP Workflows",
                            "tags": [
                                "API",
                                "SOAP",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/SOAP_Calculator.xml"
                    },
                    {
                        "name": "SOAP_Countries",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "1. SOAP Workflows",
                            "tags": [
                                "API",
                                "SOAP",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/SOAP_Countries.xml"
                    },
                    {
                        "name": "SOAP_Echo_String",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "1. SOAP Workflows",
                            "tags": [
                                "API",
                                "SOAP",
                                "Web Service"
                            ]
                        },
                        "file": "resources/catalog/SOAP_Echo_String.xml"
                    },
                    {
                        "name": "Calculator_Envelope",
                        "metadata": {
                            "kind": "script/pre",
                            "commitMessage": "First commit",
                            "contentType": "application/octet-stream",
                            "projectName": "2. SOAP Envelopes"
                        },
                        "file": "resources/catalog/Calculator_Envelope.xml"
                    },
                    {
                        "name": "Capital_City_Envelope",
                        "metadata": {
                            "kind": "script/pre",
                            "commitMessage": "First commit",
                            "contentType": "application/octet-stream",
                            "projectName": "2. SOAP Envelopes"
                        },
                        "file": "resources/catalog/Capital_City_Envelope.xml"
                    },
                    {
                        "name": "Currency_Envelope",
                        "metadata": {
                            "kind": "script/pre",
                            "commitMessage": "First commit",
                            "contentType": "application/octet-stream",
                            "projectName": "2. SOAP Envelopes"
                        },
                        "file": "resources/catalog/Currency_Envelope.xml"
                    },
                    {
                        "name": "International_Phone_Code_Envelope",
                        "metadata": {
                            "kind": "script/pre",
                            "commitMessage": "First commit",
                            "contentType": "application/octet-stream",
                            "projectName": "2. SOAP Envelopes"
                        },
                        "file": "resources/catalog/International_Phone_Code_Envelope.xml"
                    }
                ]
            }
        },
        "Spark": {
            "metadata": {
                "slug": "apache-spark",
                "name": "Apache Spark",
                "short_description": "Lifecycle management workflows for Apache Spark",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Spark",
                "tags": [
                    "Big Data",
                    "Spark",
                    "Service Automation",
                    "Artificial Intelligence",
                    "Analytics"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Spark",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "Big Data",
                                "Spark",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Spark.xml"
                    },
                    {
                        "name": "Finish_Spark",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Artificial Intelligence",
                                "Big Data",
                                "Spark",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Finish_Spark.xml"
                    }
                ]
            }
        },
        "SparkOrchestration": {
            "metadata": {
                "slug": "apache-spark-orchestration",
                "name": "Apache Spark Orchestration",
                "short_description": "Orchestrate Apache Spark jobs from ProActive",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/SparkOrchestration",
                "tags": [
                    "Orchestration",
                    "Artificial Intelligence",
                    "Big Data",
                    "HDFS",
                    "Spark",
                    "Building blocks",
                    "Analytics"
                ]
            },
            "catalog": {
                "bucket": "data-big-data",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Scala_Spark_Pi",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Artificial Intelligence",
                                "Big Data",
                                "Spark",
                                "Building blocks",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Scala_Spark_Pi.xml"
                    },
                    {
                        "name": "Scala_Spark_Write_Read_HDFS",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Artificial Intelligence",
                                "Big Data",
                                "HDFS",
                                "Spark",
                                "Building blocks",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Scala_Spark_Write_Read_HDFS.xml"
                    },
                    {
                        "name": "Python_Spark_Pi",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Artificial Intelligence",
                                "Big Data",
                                "Spark",
                                "Building blocks",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Python_Spark_Pi.xml"
                    }
                ]
            }
        },
        "SSH": {
            "metadata": {
                "slug": "ssh",
                "name": "SSH",
                "short_description": "SSH terminal via web browser",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/SSH",
                "tags": [
                    "Data Connectors",
                    "SSH",
                    "Wetty",
                    "Terminal",
                    "Web Browser"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "SSH_Terminal_Via_Browser",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Connectors",
                                "Wetty",
                                "SSH",
                                "Terminal",
                                "Web Browser"
                            ]
                        },
                        "file": "resources/catalog/SSH_Terminal_Via_Browser.xml"
                    },
                    {
                        "name": "Finish_SSH_Terminal_Via_Browser",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Connectors",
                                "Wetty",
                                "SSH",
                                "Terminal",
                                "Web Browser"
                            ]
                        },
                        "file": "resources/catalog/Finish_SSH_Terminal_Via_Browser.xml"
                    },
                    {
                        "name": "SSH_Terminal_For_Distributed_Nodes",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Connectors",
                                "Wetty",
                                "SSH",
                                "Terminal",
                                "Web Browser"
                            ]
                        },
                        "file": "resources/catalog/SSH_Terminal_For_Distributed_Nodes.xml"
                    },
                    {
                        "name": "Finish_SSH_Terminal_For_Distributed_Nodes",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Data Connectors",
                                "Wetty",
                                "SSH",
                                "Terminal",
                                "Web Browser"
                            ]
                        },
                        "file": "resources/catalog/Finish_SSH_Terminal_For_Distributed_Nodes.xml"
                    }
                ]
            }
        },
        "SSHCommunication": {
            "metadata": {
                "slug": "ssh",
                "name": "SSH",
                "short_description": "SSH communication",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/SSHCommunication",
                "tags": [
                    "SSH",
                    "Get started",
                    "Samples",
                    "Building blocks"
                ]
            },
            "catalog": {
                "bucket": "communication-ssh",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "SSH_Remote_Script_Execution",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "SSH",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/SSH_Remote_Script_Execution.xml"
                    },
                    {
                        "name": "SSH_Expect_Remote_Command_Execution",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "SSH",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/SSH_Expect_Remote_Command_Execution.xml"
                    },
                    {
                        "name": "SSH_Expect_Remote_Script_Execution",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Samples",
                                "SSH",
                                "Get started",
                                "Building blocks"
                            ]
                        },
                        "file": "resources/catalog/SSH_Expect_Remote_Script_Execution.xml"
                    }
                ]
            }
        },
        "Storm": {
            "metadata": {
                "slug": "apache-storm",
                "name": "Apache Storm",
                "short_description": "Lifecycle management workflows for Apache Storm",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Storm",
                "tags": [
                    "Big Data",
                    "Storm",
                    "Service Automation",
                    "Analytics"
                ]
            },
            "dataspace": {
                "target": "global",
                "files": [
                    "resources/dataspace/storm.yaml"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Storm",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Storm",
                                "Big Data",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Storm.xml"
                    },
                    {
                        "name": "Finish_Storm",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Storm",
                                "Big Data",
                                "Service Automation",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Finish_Storm.xml"
                    }
                ]
            }
        },
        "Synchronization": {
            "metadata": {
                "slug": "synchronization-examples",
                "name": "Synchronization Examples",
                "short_description": "Workflow examples which use the Synchronization API",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Synchronization",
                "tags": [
                    "API",
                    "Critical Section",
                    "Synchronization"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "control-templates",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Key_Value",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Critical Section",
                                "API",
                                "Synchronization"
                            ]
                        },
                        "file": "resources/catalog/KeyValue.xml"
                    },
                    {
                        "name": "Key_Value_Wait",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Critical Section",
                                "API",
                                "Synchronization"
                            ]
                        },
                        "file": "resources/catalog/KeyValueWait.xml"
                    },
                    {
                        "name": "Critical_Section",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Critical Section",
                                "API",
                                "Synchronization"
                            ]
                        },
                        "file": "resources/catalog/CriticalSection.xml"
                    },
                    {
                        "name": "Critical_Section_With_Selection_Scripts",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Critical Section",
                                "API",
                                "Synchronization"
                            ]
                        },
                        "file": "resources/catalog/CriticalSectionWithSelectionScripts.xml"
                    },
                    {
                        "name": "Service_Deployer_Consumer",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Critical Section",
                                "API",
                                "Synchronization"
                            ]
                        },
                        "file": "resources/catalog/ServiceDeployerConsumer.xml"
                    }
                ]
            }
        },
        "Tensorboard": {
            "metadata": {
                "slug": "tensorboard",
                "name": "TensorBoard",
                "short_description": "Lifecycle management workflow of Tensorboard Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Tensorboard",
                "tags": [
                    "TensorBoard",
                    "Visualization",
                    "Service Automation",
                    "Artificial Intelligence"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Tensorboard",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Visualization",
                                "Artificial Intelligence",
                                "TensorBoard",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Tensorboard.xml"
                    },
                    {
                        "name": "Finish_Tensorboard",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Visualization",
                                "Artificial Intelligence",
                                "TensorBoard",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Finish_Tensorboard.xml"
                    }
                ]
            }
        },
        "Triggers": {
            "metadata": {
                "slug": "event triggers",
                "name": "event triggers",
                "short_description": "Event Triggers",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Triggers",
                "tags": [
                    "FTP",
                    "Memory",
                    "SFTP",
                    "Triggers",
                    "File",
                    "Date"
                ]
            },
            "catalog": {
                "bucket": "event-triggers",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Single_File_Trigger",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "02. File Watcher Triggers",
                            "tags": [
                                "Triggers",
                                "File"
                            ]
                        },
                        "file": "resources/catalog/Single_File_Trigger.xml"
                    },
                    {
                        "name": "New_File_Trigger",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "02. File Watcher Triggers",
                            "tags": [
                                "Memory",
                                "Triggers"
                            ]
                        },
                        "file": "resources/catalog/New_File_Trigger.xml"
                    },
                    {
                        "name": "StartAt_DateTime_Trigger",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "01. DateTime Triggers",
                            "tags": [
                                "Triggers",
                                "Date"
                            ]
                        },
                        "file": "resources/catalog/StartAt_DateTime_Trigger.xml"
                    },
                    {
                        "name": "FTP_File_Trigger",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "02. File Watcher Triggers",
                            "tags": [
                                "FTP",
                                "Triggers"
                            ]
                        },
                        "file": "resources/catalog/FTP_File_Trigger.xml"
                    },
                    {
                        "name": "SFTP_File_Trigger",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "02. File Watcher Triggers",
                            "tags": [
                                "SFTP",
                                "Triggers"
                            ]
                        },
                        "file": "resources/catalog/SFTP_File_Trigger.xml"
                    },
                    {
                        "name": "vfs_selection_with_memory",
                        "metadata": {
                            "kind": "Script/selection",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "04. File Trigger Scripts"
                        },
                        "file": "resources/catalog/vfs_selection_with_memory.groovy"
                    },
                    {
                        "name": "read_new_files_and_submit",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "04. File Trigger Scripts"
                        },
                        "file": "resources/catalog/read_new_files_and_submit.groovy"
                    },
                    {
                        "name": "Pipeline_File_Trigger",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "03. File Watcher - Pipeline Example",
                            "tags": [
                                "Triggers",
                                "File"
                            ]
                        },
                        "file": "resources/catalog/Pipeline_File_Trigger.xml"
                    },
                    {
                        "name": "Pipeline_File_Action",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "projectName": "03. File Watcher - Pipeline Example",
                            "tags": [
                                "Triggers",
                                "File"
                            ]
                        },
                        "file": "resources/catalog/Pipeline_File_Action.xml"
                    }
                ]
            }
        },
        "Visdom": {
            "metadata": {
                "slug": "visdom",
                "name": "Visdom",
                "short_description": "Lifecycle management workflow of Visdom Server for Service Automation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Visdom",
                "tags": [
                    "Visualization",
                    "Service Automation",
                    "Visdom"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Visdom",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Visualization",
                                "Service Automation",
                                "Visdom"
                            ]
                        },
                        "file": "resources/catalog/Visdom.xml"
                    },
                    {
                        "name": "Finish_Visdom",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Visualization",
                                "Service Automation",
                                "Visdom"
                            ]
                        },
                        "file": "resources/catalog/Finish_Visdom.xml"
                    }
                ]
            }
        },
        "VMware": {
            "metadata": {
                "slug": "vmware-vsphere",
                "name": "VMware VSphere",
                "short_description": "ProActive task templates and workflow examples for VMware management",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/VMware",
                "tags": [
                    "VMware",
                    "Container",
                    "Vsphere",
                    "PowerCLI",
                    "VM"
                ]
            },
            "catalog": {
                "bucket": "it-vmware-connectors",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Check_Service_${SERVICE_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/Check_Service_${SERVICE_NAME}.xml"
                    },
                    {
                        "name": "Get_VM_State_${VCENTER_VM_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/Get_VM_State_${VCENTER_VM_NAME}.xml"
                    },
                    {
                        "name": "List_VMs",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/List_VMs.xml"
                    },
                    {
                        "name": "Restart_VM_${VCENTER_VM_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/Restart_VM_${VCENTER_VM_NAME}.xml"
                    },
                    {
                        "name": "Start_VM_${VCENTER_VM_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/Start_VM_${VCENTER_VM_NAME}.xml"
                    },
                    {
                        "name": "Stop_VM_${VCENTER_VM_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/Stop_VM_${VCENTER_VM_NAME}.xml"
                    },
                    {
                        "name": "VCENTER_Authentication",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Authentication.xml"
                    },
                    {
                        "name": "VCENTER_Get_VM_ID_By_Name",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Get_VM_ID_By_Name.xml"
                    },
                    {
                        "name": "VCENTER_Get_VM_State",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Get_VM_State.xml"
                    },
                    {
                        "name": "VCENTER_List_VMs",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_List_VMs.xml"
                    },
                    {
                        "name": "VCENTER_Session_Logout",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Session_Logout.xml"
                    },
                    {
                        "name": "VCENTER_Shutdown_VM",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Shutdown_VM.xml"
                    },
                    {
                        "name": "VCENTER_Start_VM",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Start_VM.xml"
                    },
                    {
                        "name": "VCENTER_Restart_VM_${VCENTER_VM_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Restart_VM_${VCENTER_VM_NAME}.xml"
                    },
                    {
                        "name": "VCENTER_Shutdown_VM_${VCENTER_VM_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Shutdown_VM_${VCENTER_VM_NAME}.xml"
                    },
                    {
                        "name": "VCENTER_Start_VM_${VCENTER_VM_NAME}",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "VMware",
                                "Container",
                                "Vsphere",
                                "VM",
                                "PowerCLI"
                            ]
                        },
                        "file": "resources/catalog/VCENTER_Start_VM_${VCENTER_VM_NAME}.xml"
                    }
                ]
            }
        },
        "WebNotification": {
            "metadata": {
                "slug": "notification",
                "name": "Notification",
                "short_description": "Samples for web notification and validation",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/WebNotification",
                "tags": [
                    "Webhook",
                    "Notification"
                ]
            },
            "test": {
                "scenarios": "resources/test/scenarios.json"
            },
            "catalog": {
                "bucket": "control-notification",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Web_Notification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Webhook",
                                "Notification"
                            ]
                        },
                        "file": "resources/catalog/web_notification.xml"
                    },
                    {
                        "name": "Web_Validation",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Webhook",
                                "Notification"
                            ]
                        },
                        "file": "resources/catalog/web_validation.xml"
                    },
                    {
                        "name": "Channel_Notification",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Webhook",
                                "Notification"
                            ]
                        },
                        "file": "resources/catalog/channel_notification.xml"
                    },
                    {
                        "name": "Web_Validation_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Web_Validation_Script.groovy"
                    },
                    {
                        "name": "Web_Notification_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Web_Notification_Script.groovy"
                    },
                    {
                        "name": "Channel_Notification_Script",
                        "metadata": {
                            "kind": "Script/task",
                            "commitMessage": "First commit",
                            "contentType": "text/x-groovy",
                            "projectName": "Scripts"
                        },
                        "file": "resources/catalog/Channel_Notification_Script.groovy"
                    }
                ]
            }
        },
        "YARN": {
            "metadata": {
                "slug": "apache-hadoop-yarn",
                "name": "Apache Hadoop YARN",
                "short_description": "Lifecycle management workflows for Apache Hadoop YARN",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/YARN",
                "tags": [
                    "Big Data",
                    "Service Automation",
                    "YARN",
                    "Analytics"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "YARN",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Service Automation",
                                "YARN",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/YARN.xml"
                    },
                    {
                        "name": "Finish_YARN",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Big Data",
                                "Service Automation",
                                "YARN",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Finish_YARN.xml"
                    }
                ]
            }
        },
        "YarnOrchestration": {
            "metadata": {
                "slug": "apache-hadoop-yarn-orchestration",
                "name": "Apache Hadoop YARN Orchestration",
                "short_description": "Orchestrate Apache Hadoop YARN jobs from ProActive",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/YarnOrchestration",
                "tags": [
                    "Orchestration",
                    "Big Data",
                    "YARN",
                    "Building blocks",
                    "Analytics"
                ]
            },
            "catalog": {
                "bucket": "data-big-data",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Yarn_Pi_Example",
                        "metadata": {
                            "kind": "Workflow/standard",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Orchestration",
                                "Big Data",
                                "YARN",
                                "Building blocks",
                                "Analytics"
                            ]
                        },
                        "file": "resources/catalog/Yarn_Pi_Example.xml"
                    }
                ]
            }
        },
        "Zookeeper": {
            "metadata": {
                "slug": "zookeeper",
                "name": "Zookeeper",
                "short_description": "Lifecycle management workflows for Zookeeper",
                "author": "ActiveEon's Team",
                "version": "1.0",
                "repo_url": "https://github.com/ow2-proactive/proactive-examples/tree/master/Zookeeper",
                "tags": [
                    "Big Data",
                    "Coordination Server",
                    "Service Automation",
                    "Zookeeper"
                ]
            },
            "catalog": {
                "bucket": "service-automation",
                "userGroup": "public-objects",
                "objects": [
                    {
                        "name": "Zookeeper",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Coordination Server",
                                "Zookeeper",
                                "Big Data",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Zookeeper.xml"
                    },
                    {
                        "name": "Finish_Zookeeper",
                        "metadata": {
                            "kind": "Workflow/psa",
                            "commitMessage": "First commit",
                            "contentType": "application/xml",
                            "tags": [
                                "Coordination Server",
                                "Zookeeper",
                                "Big Data",
                                "Service Automation"
                            ]
                        },
                        "file": "resources/catalog/Finish_Zookeeper.xml"
                    }
                ]
            }
        }
    }
}
